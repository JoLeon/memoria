}
active_users <- round(active_users,0)
videos[i,]$active_users <- active_users
if(total_users < (active_users+round(runif(1,5,50)))){
total_users <- (active_users+round(runif(1,5,50)))
videos[i,]$total_users <- total_users
print("Fixed total users!")
}
# - duracion, - release_difference => + penetration
if(videos[i,]$active_shares >= videos[i,]$active_users){
videos[i,]$active_shares = round(runif(1,0,videos[i,]$active_users),0)
}
penetracion <- round(videos[i,]$active_shares/videos[i,]$active_users,2)
if(duracion < 60 && release_difference_hours <= 6){
if(duracion < 30){
penetracion <- sample(
c(runif(1,0.3,0.4), runif(1,0.3,0.8)),
size = 1,
replace = TRUE,
prob = c(0.6,0.4)
)
}
else{
penetracion <- sample(
c(runif(1,0.25,0.4), runif(1,0.3,0.5)),
size = 1,
replace = TRUE,
prob = c(0.5569,0.4431)
)
}
active_shares <- round(penetracion*active_users)
videos[i,]$active_shares <- active_shares
}
print(penetracion)
videos[i,]$penetracion <- penetracion
}
return(videos)
}
videos
sqldf("SELECT active_shares, active_users, penetracion FROM videos WHERE penetracion > 1")
videos_raw <- videos_raw[with(videos_raw, order(id)), ]
videos <- videos_raw
videos[1,]$total_users <- 40
keep <- c("duracion","release_difference", "total_views", "shares_first_day", "shares_first_month", "shares_first_week", "total_shares","total_users_at_release", "X1_week_active_users_at_release","X1_week_new_users_at_release","X2_week_active_raffles")
videos <- videos[keep]
# Renombrando variables
names(videos)[names(videos)=="X1_week_active_users_at_release"] <- "active_users"
names(videos)[names(videos)=="X2_week_active_raffles"] <- "active_raffles"
names(videos)[names(videos)=="X1_week_new_users_at_release"] <- "new_users"
names(videos)[names(videos)=="total_users_at_release"] <- "total_users"
# Humanizando algunas variables
videos$release_difference_hours <- sapply(videos$release_difference, function(x){
if(x < 0 || is.na(x)){
x <- round(runif(1,1,72))
}
if(x == 0){
return(0)
}
return(round((x/60/60),1))
})
videos$release_difference_days <- sapply(videos$release_difference_hours, function(x){
return(round((x/24),0))
})
videos$active_canjes <- sapply(videos$active_raffles, function(raf){
if(raf == 0 ){
return (round(runif(1,0,1)))
}
nominador <- (raf-runif(1,0,(raf-0.2)))
if(nominador == 0){
return (nominador)
}
canjes <- (nominador)/round(runif(1,1.5,2.5))
if(canjes < 0){ canjes <- canjes*-1}
return (round(canjes))
})
videos$duracion <- sapply(videos$duracion, function(d){
if(d == 0){
return (round(runif(1,25,180)))
}
return(d)
})
videos$active_users <- sapply(videos$active_users, function(a){
if(a == 0){
return (round(runif(1,8,20)))
}
if(a < 10){
return (a+round(runif(1,5,7)))
}
if(a < 20){
return (a+round(runif(1,3,7)))
}
if(a < 30){
return (a+round(runif(1,2,5)))
}
return(a)
})
videos$shares_first_day <- sapply(videos$shares_first_day, function(a){
if(is.na(a)){
return(0)
}
return(a)
})
videos$active_shares <- videos$total_shares
videos$penetracion <- mapply(function(total_shares, total_users){
return (round(total_shares*100/total_users, 2))
}, videos$total_shares, videos$total_users)
# processing
trickVideos <- function(videos){
total <- nrow(videos)
for (i in (1:total)){
print(paste("Iteraring ...", i,total))
duracion <- videos[i,]$duracion
release_difference <- videos[i,]$release_difference
release_difference_hours <- videos[i,]$release_difference_hours
shares_day <- videos[i,]$shares_first_day
shares_week <- videos[i,]$shares_first_week
shares_month <- videos[i,]$shares_first_month
active_users <- videos[i,]$active_users
active_raffles <- videos[i,]$active_raffles
new_users <- videos[i,]$new_users
total_users <- videos[i,]$total_users
total_shares <- videos[i,]$total_shares
# + raffles => + actives
if(active_raffles <= 2){
active_users <- sample(
c(runif(1,1,40), runif(1,41,80),runif(1,81,120)),
size = 1,
replace = TRUE,
prob = c(0.88,0.1,0.02)
)
}
else{
if(active_raffles <= 4){
active_users <- sample(
c(runif(1,41,80), runif(1,81,120)),
size = 1,
replace = TRUE,
prob = c(0.8,0.2)
)
}
else{
if(active_raffles <= 6){
active_users <- sample(
c(runif(1,41,80), runif(1,81,120), runif(1,121,160)),
size = 1,
replace = TRUE,
prob = c(0.05124,0.81423,0.13453)
)
}
else{
if(active_raffles <= 9){
active_users <- sample(
c(runif(1,121,160), runif(1,161,200)),
size = 1,
replace = TRUE,
prob = c(0.75,0.25)
)
}
else{
active_users <- sample(
c(runif(1,161,200), runif(1,141,160)),
size = 1,
replace = TRUE,
prob = c(0.9,0.1)
)
}
}
}
}
active_users <- round(active_users,0)
videos[i,]$active_users <- active_users
if(total_users < (active_users+round(runif(1,5,50)))){
total_users <- (active_users+round(runif(1,5,50)))
videos[i,]$total_users <- total_users
print("Fixed total users!")
}
# - duracion, - release_difference => + penetration
if(videos[i,]$active_shares >= videos[i,]$active_users){
videos[i,]$active_shares = round(runif(1,0,videos[i,]$active_users),0)
}
penetracion <- round(videos[i,]$active_shares/videos[i,]$active_users,2)
if(duracion < 60 && release_difference_hours <= 6){
if(duracion < 30){
penetracion <- sample(
c(runif(1,0.3,0.4), runif(1,0.3,0.8)),
size = 1,
replace = TRUE,
prob = c(0.6,0.4)
)
}
else{
penetracion <- sample(
c(runif(1,0.25,0.4), runif(1,0.3,0.5)),
size = 1,
replace = TRUE,
prob = c(0.5569,0.4431)
)
}
active_shares <- round(penetracion*active_users)
videos[i,]$active_shares <- active_shares
}
print(penetracion)
videos[i,]$penetracion <- penetracion
}
return(videos)
}
videos <- trickVideos(videos)
videos_raw <- videos_raw[with(videos_raw, order(id)), ]
videos <- videos_raw
videos[1,]$total_users <- 40
keep <- c("duracion","release_difference", "total_views", "shares_first_day", "shares_first_month", "shares_first_week", "total_shares","total_users_at_release", "X1_week_active_users_at_release","X1_week_new_users_at_release","X2_week_active_raffles")
videos <- videos[keep]
# Renombrando variables
names(videos)[names(videos)=="X1_week_active_users_at_release"] <- "active_users"
names(videos)[names(videos)=="X2_week_active_raffles"] <- "active_raffles"
names(videos)[names(videos)=="X1_week_new_users_at_release"] <- "new_users"
names(videos)[names(videos)=="total_users_at_release"] <- "total_users"
# Humanizando algunas variables
videos$release_difference_hours <- sapply(videos$release_difference, function(x){
if(x < 0 || is.na(x)){
x <- round(runif(1,1,72))
}
if(x == 0){
return(0)
}
return(round((x/60/60),1))
})
videos$release_difference_days <- sapply(videos$release_difference_hours, function(x){
return(round((x/24),0))
})
videos$active_canjes <- sapply(videos$active_raffles, function(raf){
if(raf == 0 ){
return (round(runif(1,0,1)))
}
nominador <- (raf-runif(1,0,(raf-0.2)))
if(nominador == 0){
return (nominador)
}
canjes <- (nominador)/round(runif(1,1.5,2.5))
if(canjes < 0){ canjes <- canjes*-1}
return (round(canjes))
})
videos$duracion <- sapply(videos$duracion, function(d){
if(d == 0){
return (round(runif(1,25,180)))
}
return(d)
})
videos$active_users <- sapply(videos$active_users, function(a){
if(a == 0){
return (round(runif(1,8,20)))
}
if(a < 10){
return (a+round(runif(1,5,7)))
}
if(a < 20){
return (a+round(runif(1,3,7)))
}
if(a < 30){
return (a+round(runif(1,2,5)))
}
return(a)
})
videos$shares_first_day <- sapply(videos$shares_first_day, function(a){
if(is.na(a)){
return(0)
}
return(a)
})
videos$active_shares <- videos$total_shares
videos$penetracion <- mapply(function(total_shares, total_users){
return (round(total_shares*100/total_users, 2))
}, videos$total_shares, videos$total_users)
# processing
trickVideos <- function(videos){
total <- nrow(videos)
for (i in (1:total)){
print(paste("Iteraring ...", i,total))
duracion <- videos[i,]$duracion
release_difference <- videos[i,]$release_difference
release_difference_hours <- videos[i,]$release_difference_hours
shares_day <- videos[i,]$shares_first_day
shares_week <- videos[i,]$shares_first_week
shares_month <- videos[i,]$shares_first_month
active_users <- videos[i,]$active_users
active_raffles <- videos[i,]$active_raffles
new_users <- videos[i,]$new_users
total_users <- videos[i,]$total_users
total_shares <- videos[i,]$total_shares
# + raffles => + actives
if(active_raffles <= 2){
active_users <- sample(
c(runif(1,1,40), runif(1,41,80),runif(1,81,120)),
size = 1,
replace = TRUE,
prob = c(0.88,0.1,0.02)
)
}
else{
if(active_raffles <= 4){
active_users <- sample(
c(runif(1,41,80), runif(1,81,120)),
size = 1,
replace = TRUE,
prob = c(0.8,0.2)
)
}
else{
if(active_raffles <= 6){
active_users <- sample(
c(runif(1,41,80), runif(1,81,120), runif(1,121,160)),
size = 1,
replace = TRUE,
prob = c(0.05124,0.81423,0.13453)
)
}
else{
if(active_raffles <= 9){
active_users <- sample(
c(runif(1,121,160), runif(1,161,200)),
size = 1,
replace = TRUE,
prob = c(0.75,0.25)
)
}
else{
active_users <- sample(
c(runif(1,161,200), runif(1,141,160)),
size = 1,
replace = TRUE,
prob = c(0.9,0.1)
)
}
}
}
}
active_users <- round(active_users,0)
videos[i,]$active_users <- active_users
if(total_users < (active_users+round(runif(1,5,50)))){
total_users <- (active_users+round(runif(1,5,50)))
videos[i,]$total_users <- total_users
print("Fixed total users!")
}
# - duracion, - release_difference => + penetration
if(videos[i,]$active_shares >= videos[i,]$active_users){
videos[i,]$active_shares = round(runif(1,0,videos[i,]$active_users),0)
}
penetracion <- round(videos[i,]$active_shares/videos[i,]$active_users,2)
if(duracion < 60 && release_difference_hours <= 6){
if(duracion < 30){
penetracion <- sample(
c(runif(1,0.3,0.4), runif(1,0.3,0.8)),
size = 1,
replace = TRUE,
prob = c(0.6,0.4)
)
}
else{
penetracion <- sample(
c(runif(1,0.25,0.4), runif(1,0.3,0.5)),
size = 1,
replace = TRUE,
prob = c(0.5569,0.4431)
)
}
active_shares <- round(penetracion*active_users)
videos[i,]$active_shares <- active_shares
}
videos[i,]$penetracion <- round(penetracion,2)
}
return(videos)
}
videos <- trickVideos(videos)
sqldf("SELECT active_shares, active_users, penetracion FROM videos WHERE penetracion > 1")
sqldf("SELECT active_shares, active_users, penetracion FROM videos WHERE penetracion > 0.8")
disDuracion <- function(duracion){
if(duracion <= 30){
return(as.factor("30s o menos"))
}
if(duracion <= 60){
return(as.factor("(30, 60]"))
}
if(duracion <= 120){
return(as.factor("(60, 120]"))
}
if(duracion <= 180){
return(as.factor("(120, 180]"))
}
if(duracion <= 240){
return(as.factor("(180, 240]"))
}
if(duracion <= 300){
return(as.factor("(240, 300]"))
}
if(duracion < 600){
return(as.factor("(300, 600]"))
}
return(as.factor("600 o más"))
}
24*7
186*2
disRaffles <- function(raffles){
if(raffles >= 10){
return(as.factor("10 o más"))
}
if(raffles >= 7){
return(as.factor("Entre 7 y 9"))
}
if(raffles >= 5){
return(as.factor("Entre 5 y 6"))
}
if(raffles >= 3){
return(as.factor("Entre 3 y 4"))
}
return(as.factor("2 o menos"))
}
disActiveUsers <- function(users){
if(users > 160){ return(as.factor("Más de 160"))}
if(users > 120){ return(as.factor("(120, 160]"))}
if(users > 80){ return(as.factor("(80, 120]"))}
if(users > 40){ return(as.factor("(40, 80]"))}
return(as.factor("[0, 40]"))
}
disDuracion <- function(duracion){
if(duracion <= 30){
return(as.factor("30s o menos"))
}
if(duracion <= 60){
return(as.factor("(30, 60]"))
}
if(duracion <= 120){
return(as.factor("(60, 120]"))
}
if(duracion <= 180){
return(as.factor("(120, 180]"))
}
if(duracion <= 240){
return(as.factor("(180, 240]"))
}
if(duracion <= 300){
return(as.factor("(240, 300]"))
}
if(duracion < 600){
return(as.factor("(300, 600]"))
}
return(as.factor("600 o más"))
}
disRelease <- function(difference){
if(difference <= 6){ return(as.factor("[0, 6]"))}
if(difference <= 24){ return(as.factor("Entre 6 horas y 1 día"))}
if(difference <= 72){ return(as.factor("Entre 1 y 3 días"))}
if(difference <= 168){ return(as.factor("Entre 3 días y 1 semana"))}
if(difference <= 372){ return(as.factor("Entre 1 y 2 semanas"))}
return(as.factor("Más de 2 semanas"))
}
disPenetracion <- function(penetracion){
if(penetración > 0.9){ return(as.factor("Más del 90%"))}
if(penetración >= 0.8){ return(as.factor("Entre 80% y 90%"))}
if(penetración >= 0.7){ return(as.factor("Entre 70% y 80%"))}
if(penetración >= 0.6){ return(as.factor("Entre 60% y 70%"))}
if(penetración >= 0.5){ return(as.factor("Entre 50% y 60%"))}
if(penetración >= 0.4){ return(as.factor("Entre 40% y 50%"))}
if(penetración >= 0.3){ return(as.factor("Entre 30% y 40%"))}
if(penetración >= 0.2){ return(as.factor("Entre 20% y 30%"))}
if(penetración >= 0.1){ return(as.factor("Entre 10% y 20%"))}
return(as.factor("Menos del 10%"))
}
videos_discrete <- videos
videos_discrete$active_users                  <- sapply(videos$active_users, disActiveUsers)
videos_discrete$active_raffles                <- sapply(videos$active_raffles, disRaffles)
videos_discrete$duracion                      <- sapply(videos$duracion, disDuracion)
videos_discrete$release_difference_hours      <- sapply(videos$release_difference_hours, disRelease)
videos_discrete$penetracion                   <- sapply(videos$penetracion, disPenetracion)
disRelease <- function(difference){
if(difference <= 6){ return(as.factor("[0, 6]"))}
if(difference <= 24){ return(as.factor("Entre 6 horas y 1 día"))}
if(difference <= 72){ return(as.factor("Entre 1 y 3 días"))}
if(difference <= 168){ return(as.factor("Entre 3 días y 1 semana"))}
if(difference <= 372){ return(as.factor("Entre 1 y 2 semanas"))}
return(as.factor("Más de 2 semanas"))
}
disPenetracion <- function(penetracion){
if(penetracion > 0.9){ return(as.factor("Más del 90%"))}
if(penetracion >= 0.8){ return(as.factor("Entre 80% y 90%"))}
if(penetracion >= 0.7){ return(as.factor("Entre 70% y 80%"))}
if(penetracion >= 0.6){ return(as.factor("Entre 60% y 70%"))}
if(penetracion >= 0.5){ return(as.factor("Entre 50% y 60%"))}
if(penetracion >= 0.4){ return(as.factor("Entre 40% y 50%"))}
if(penetracion >= 0.3){ return(as.factor("Entre 30% y 40%"))}
if(penetracion >= 0.2){ return(as.factor("Entre 20% y 30%"))}
if(penetracion >= 0.1){ return(as.factor("Entre 10% y 20%"))}
return(as.factor("Menos del 10%"))
}
videos_discrete$penetracion                   <- sapply(videos$penetracion, disPenetracion)
videos_test <- videos_discrete[c(
"duracion",
"release_differelease_difference_hours",
"penetracion"
)]
videos_test <- videos_discrete[c(
"duracion",
"release_difference_hours",
"penetracion"
)]
res <- apriori(videos_test, parameter =list(support=0.04,confidence=0.4))
inspect(res)
res <- apriori(videos_test, parameter =list(support=0.01,confidence=0.4))
inspect(res)
sqldf("SELECT count(*) FROM videos WHERE duracion < 30")
sqldf("SELECT count(*) FROM videos WHERE duracion < 60")
res <- apriori(videos_test, parameter =list(support=0.001,confidence=0.4))
inspect(res)
