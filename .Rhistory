isDepleted <- function(saldo, points_given){
if(saldo < 100 && points_given > 100){
return(as.factor("1"))
}
else{
return(as.factor("0"))
}
}
videos$is_depleted <- mapply(isDepleted, videos$saldo_actual, videos$points_given)
names(videos)[names(videos)=="X1_week_active_users_at_release"] <- "active_users"
names(videos)[names(videos)=="X1_week_active_raffles"] <- "active_raffles"
str(videos)
names(videos)[names(videos)=="X1_week_new_users_at_release"] <- "new_users"
str(videos)
names(videos)[names(videos)=="total_users_at_release"] <- "total_users"
videos$X2_week_active_raffles <- NULL
videos$active_raffles_at_release <- NULL
videos$X2_week_new_users_at_release <- NULL
videos$X2_week_active_users_at_release <- NULL
videos$release_date_youtube <- NULL
str(videos)
videos$male_shares <- NULL
videos$female_shares <- NULL
str(videos)
videos$url <- NULL
weekdays(as.Date(videos[0]$release_date))
getReleaseDay <- function(date){
return(weekdays(as.Date(date)))
}
videos$release_day <- sapply(videos$release_date, getReleaseDay)
str(videos)
getReleaseDay <- function(date){
return(as.factor(weekdays(as.Date(date))))
}
videos$release_day <- sapply(videos$release_date, getReleaseDay)
str(videos)
library(arules)
library(klaR)
library(cluster)
library(graphics)
library(fpc)
library(optpart)
library(Hmisc)
summary(discretize(videos$duracion, method="frequency",categories=10))
videos$rango_duracion <- discretize(videos$duracion, method="frequency", categories=10)
str(videos)
View(videos)
videos <- read.csv("Data/videos.csv", header = TRUE, sep=";")
releaseDifferenceToDays <- function(x){
if(is.na(x) || x == 0 || x == -1){
return(NA)
}
else {
if(x < 0){
return(NA)
}
else{
return(round((x/60/60/24),0))
}
}
}
videos$release_difference <- sapply(videos$release_difference, releaseDifferenceToDays)
videos$avg_ppv <- mapply(getAvgPpv, videos$total_views, videos$points_given)
videos$is_depleted <- mapply(isDepleted, videos$saldo_actual, videos$points_given)
videos$release_day <- sapply(videos$release_date, getReleaseDay)
names(videos)[names(videos)=="X1_week_active_users_at_release"] <- "active_users"
names(videos)[names(videos)=="X1_week_active_raffles"] <- "active_raffles"
names(videos)[names(videos)=="X1_week_new_users_at_release"] <- "new_users"
names(videos)[names(videos)=="total_users_at_release"] <- "total_users"
videos$X2_week_active_raffles <- NULL
videos$active_raffles_at_release <- NULL
videos$X2_week_new_users_at_release <- NULL
videos$X2_week_active_users_at_release <- NULL
videos$release_date_youtube <- NULL
videos$male_shares <- NULL
videos$female_shares <- NULL
videos$url <- NULL
videos$rango_duracion <- discretize(videos$duracion, method="frequency", categories=10)
summary(discretize(videos$release_difference, method="frequency",categories=10))
summary(discretize(videos$release_difference, method="frequency",categories=11))
str(videos)
summary(discretize(videos$total_views, method="frequency",categories=11))
summary(discretize(videos$total_views, method="frequency",categories=10))
summary(discretize(videos$points_given, method="frequency",categories=10))
str(videos)
summary(discretize(videos$shares_first_day, method="frequency",categories=10))
summary(discretize(videos$shares_first_day, method="frequency",categories=20))
summary(discretize(videos$shares_first_day, method="frequency",categories=15))
summary(discretize(videos$shares_first_week, method="frequency",categories=15))
summary(discretize(videos$shares_first_week, method="frequency",categories=10))
summary(discretize(videos$shares_first_week, method="frequency",categories=9))
summary(discretize(videos$shares_first_month, method="frequency",categories=9))
summary(discretize(videos$shares_first_month, method="frequency",categories=10))
str(videos)
summary(discretize(videos$total_shares, method="frequency",categories=10))
summary(discretize(videos$total_shares, method="frequency",categories=11))
summary(discretize(videos$total_users, method="frequency",categories=11))
summary(discretize(videos$total_users, method="frequency",categories=10))
summary(discretize(videos$active_users, method="frequency",categories=10))
summary(discretize(videos$new_users, method="frequency",categories=10))
videos$rango_XX <- discretize(videos$new_users, method="frequency",categories=10)
videos$rango_XX <- NULL
summary(discretize(videos$active_raffles, method="frequency",categories=10))
summary(discretize(videos$active_raffles, method="frequency",categories=11))
summary(discretize(videos$active_raffles, method="frequency",categories=12))
summary(discretize(videos$active_raffles, method="frequency",categories=10))
summary(discretize(videos$avg_ppv, method="frequency",categories=10))
summary(discretize(videos$avg_ppv, method="frequency",categories=20))
summary(discretize(videos$avg_ppv, method="frequency",categories=70))
summary(discretize(videos$avg_ppv, method="frequency",categories=10))
videos$rango_duracion <- discretize(videos$duracion, method="frequency", categories=10)
videos$rango_release_difference <- discretize(videos$release_difference, method="frequency",categories=11)
videos$rango_total_views <- discretize(videos$total_views, method="frequency",categories=10)
videos$rango_points_given <- discretize(videos$points_given, method="frequency", categories=10)
videos$rango_shares_first_day <- discretize(videos$shares_first_day, method="frequency",categories=20)
videos$rango_shares_first_week <- discretize(videos$shares_first_week, method="frequency",categories=9)
videos$rango_shares_first_month <- discretize(videos$shares_first_month, method="frequency",categories=10)
videos$rango_total_shares <- discretize(videos$total_shares, method="frequency",categories=11)
videos$rango_total_users <- discretize(videos$total_users, method="frequency",categories=10)
videos$rango_active_users <- discretize(videos$active_users, method="frequency",categories=10)
videos$rango_new_users <- discretize(videos$new_users, method="frequency",categories=10)
videos$rango_active_raffles <- discretize(videos$active_raffles, method="frequency",categories=10)
videos$rango_avg_ppv <- discretize(videos$avg_ppv, method="frequency",categories=10)
str(videos)
max_duracion <- max(videos$duracion)
min_duracion <- min(videos$duracion)
videos$normal_mm_duracion <- mapply(minmaxNormalization, videos$duracion, min_duracion, max_duracion)
max_release_difference <- max(videos$release_difference)
min_release_difference <- min(videos$release_difference)
videos$normal_mm_release_difference <- mapply(minmaxNormalization, videos$release_difference, min_release_difference, max_release_difference)
max_total_views <- max(videos$total_views)
min_total_views <- min(videos$total_views)
videos$normal_mm_total_views <- mapply(minmaxNormalization, videos$total_views, min_total_views, max_total_views)
max_points_given <- max(videos$points_given)
min_points_given <- min(videos$points_given)
videos$normal_mm_points_given <- mapply(minmaxNormalization, videos$points_given, min_points_given, max_points_given)
max_shares_first_day <- max(videos$shares_first_day)
min_shares_first_day <- min(videos$shares_first_day)
videos$normal_mm_shares_first_day <- mapply(minmaxNormalization, videos$shares_first_day, min_shares_first_day, max_shares_first_day)
max_shares_first_week <- max(videos$shares_first_week)
min_shares_first_week <- min(videos$shares_first_week)
videos$normal_mm_shares_first_week <- mapply(minmaxNormalization, videos$shares_first_week, min_shares_first_week, max_shares_first_week)
max_shares_first_month <- max(videos$shares_first_month)
min_shares_first_month <- min(videos$shares_first_month)
videos$normal_mm_shares_first_month <- mapply(minmaxNormalization, videos$shares_first_month, min_shares_first_month, max_shares_first_month)
max_total_shares <- max(videos$total_shares)
min_total_shares <- min(videos$total_shares)
videos$normal_mm_total_shares <- mapply(minmaxNormalization, videos$total_shares, min_total_shares, max_total_shares)
max_total_users <- max(videos$total_users)
min_total_users <- min(videos$total_users)
videos$normal_mm_total_users <- mapply(minmaxNormalization, videos$total_users, min_total_users, max_total_users)
max_active_users <- max(videos$active_users)
min_active_users <- min(videos$active_users)
videos$normal_mm_active_users <- mapply(minmaxNormalization, videos$active_users, min_active_users, max_active_users)
max_new_users <- max(videos$new_users)
min_new_users <- min(videos$new_users)
videos$normal_mm_new_users <- mapply(minmaxNormalization, videos$new_users, min_new_users, max_new_users)
max_active_raffles <- max(videos$active_raffles)
min_active_raffles <- min(videos$active_raffles)
videos$normal_mm_active_raffles <- mapply(minmaxNormalization, videos$active_raffles, min_active_raffles, max_active_raffles)
max_avg_ppv <- max(videos$avg_ppv)
min_avg_ppv <- min(videos$avg_ppv)
videos$normal_mm_avg_ppv <- mapply(minmaxNormalization, videos$avg_ppv, min_avg_ppv, max_avg_ppv)
str(videos)
videos$release_difference
max(videos$release_difference)
install.packages(foreach)
install.packages("foreach")
library(foreach)
install.packages("foreach")
install.packages("foreach")
library(foreach)
test = videos$release_difference
for(i=1:length(test)){print(test[i])}
for(i in 1:length(test)){print(test[i])}
test
test[length(test)-2]
is.na(test[length(test)-2])
!is.na(test[length(test)-2])
max_na <- function(vector){
maximo <- 0
for(i in 1:length(vector)){
if(!is.na(vector[i])){
if(vector[i] > maximo){
maximo <- vector[i]
}
}
}
}
max_release_difference <- max_na(videos$release_difference)
max_release_difference
max_na <- function(vector){
maximo <- 0
for(i in 1:length(vector)){
if(!is.na(vector[i])){
if(vector[i] > maximo){
maximo <- vector[i]
}
}
}
return(maximo)
}
max_release_difference <- max_na(videos$release_difference)
max_release_difference
View(videos)
max_na <- function(vector){
maximo <- -Inf
for(i in 1:length(vector)){
if(!is.na(vector[i])){
if(vector[i] > maximo){
maximo <- vector[i]
}
}
}
return(maximo)
}
min_na <- function(vector){
maximo <- Inf
for(i in 1:length(vector)){
if(!is.na(vector[i])){
if(vector[i] < maximo){
maximo <- vector[i]
}
}
}
return(maximo)
}
max_release_difference <- max_na(videos$release_difference)
max_release_difference
videos
str(videos)
max_duracion <- max(videos$duracion)
min_duracion <- min(videos$duracion)
videos$normal_mm_duracion <- mapply(minmaxNormalization, videos$duracion, min_duracion, max_duracion)
max_release_difference <- max_na(videos$release_difference)
min_release_difference <- min_na(videos$release_difference)
videos$normal_mm_release_difference <- mapply(minmaxNormalization, videos$release_difference, min_release_difference, max_release_difference)
max_total_views <- max(videos$total_views)
min_total_views <- min(videos$total_views)
videos$normal_mm_total_views <- mapply(minmaxNormalization, videos$total_views, min_total_views, max_total_views)
max_points_given <- max(videos$points_given)
min_points_given <- min(videos$points_given)
videos$normal_mm_points_given <- mapply(minmaxNormalization, videos$points_given, min_points_given, max_points_given)
max_shares_first_day <- max_na(videos$shares_first_day)
min_shares_first_day <- min_na(videos$shares_first_day)
videos$normal_mm_shares_first_day <- mapply(minmaxNormalization, videos$shares_first_day, min_shares_first_day, max_shares_first_day)
max_shares_first_week <- max(videos$shares_first_week)
min_shares_first_week <- min(videos$shares_first_week)
videos$normal_mm_shares_first_week <- mapply(minmaxNormalization, videos$shares_first_week, min_shares_first_week, max_shares_first_week)
max_shares_first_month <- max(videos$shares_first_month)
min_shares_first_month <- min(videos$shares_first_month)
videos$normal_mm_shares_first_month <- mapply(minmaxNormalization, videos$shares_first_month, min_shares_first_month, max_shares_first_month)
max_total_shares <- max(videos$total_shares)
min_total_shares <- min(videos$total_shares)
videos$normal_mm_total_shares <- mapply(minmaxNormalization, videos$total_shares, min_total_shares, max_total_shares)
max_total_users <- max(videos$total_users)
min_total_users <- min(videos$total_users)
videos$normal_mm_total_users <- mapply(minmaxNormalization, videos$total_users, min_total_users, max_total_users)
max_active_users <- max(videos$active_users)
min_active_users <- min(videos$active_users)
videos$normal_mm_active_users <- mapply(minmaxNormalization, videos$active_users, min_active_users, max_active_users)
max_new_users <- max(videos$new_users)
min_new_users <- min(videos$new_users)
videos$normal_mm_new_users <- mapply(minmaxNormalization, videos$new_users, min_new_users, max_new_users)
max_active_raffles <- max(videos$active_raffles)
min_active_raffles <- min(videos$active_raffles)
videos$normal_mm_active_raffles <- mapply(minmaxNormalization, videos$active_raffles, min_active_raffles, max_active_raffles)
max_avg_ppv <- max_na(videos$avg_ppv)
min_avg_ppv <- min_na(videos$avg_ppv)
videos$normal_mm_avg_ppv <- mapply(minmaxNormalization, videos$avg_ppv, min_avg_ppv, max_avg_ppv)
str(videos)
minmaxNormalization <- function(sample,min,max){
if(is.na(sample)){
return(NA)
}
else{
return((sample-min)/(max-min))
}
}
zscoreNormalization <- function(sample,sd,mean){
if(is.na(sample)){
return(NA)
}
else{
return((sample-mean)/(sd))
}
}
videos$rango_duracion <- discretize(videos$duracion, method="frequency", categories=10)
videos$rango_release_difference <- discretize(videos$release_difference, method="frequency",categories=11)
videos$rango_total_views <- discretize(videos$total_views, method="frequency",categories=10)
videos$rango_points_given <- discretize(videos$points_given, method="frequency", categories=10)
videos$rango_shares_first_day <- discretize(videos$shares_first_day, method="frequency",categories=20)
videos$rango_shares_first_week <- discretize(videos$shares_first_week, method="frequency",categories=9)
videos$rango_shares_first_month <- discretize(videos$shares_first_month, method="frequency",categories=10)
videos$rango_total_shares <- discretize(videos$total_shares, method="frequency",categories=11)
videos$rango_total_users <- discretize(videos$total_users, method="frequency",categories=10)
videos$rango_active_users <- discretize(videos$active_users, method="frequency",categories=10)
videos$rango_new_users <- discretize(videos$new_users, method="frequency",categories=10)
videos$rango_active_raffles <- discretize(videos$active_raffles, method="frequency",categories=10)
videos$rango_avg_ppv <- discretize(videos$avg_ppv, method="frequency",categories=10)
library(arules)
library(klaR)
library(cluster)
library(graphics)
library(fpc)
library(optpart)
library(Hmisc)
library(foreach)
videos$rango_duracion <- discretize(videos$duracion, method="frequency", categories=10)
videos$rango_release_difference <- discretize(videos$release_difference, method="frequency",categories=11)
videos$rango_total_views <- discretize(videos$total_views, method="frequency",categories=10)
videos$rango_points_given <- discretize(videos$points_given, method="frequency", categories=10)
videos$rango_shares_first_day <- discretize(videos$shares_first_day, method="frequency",categories=20)
videos$rango_shares_first_week <- discretize(videos$shares_first_week, method="frequency",categories=9)
videos$rango_shares_first_month <- discretize(videos$shares_first_month, method="frequency",categories=10)
videos$rango_total_shares <- discretize(videos$total_shares, method="frequency",categories=11)
videos$rango_total_users <- discretize(videos$total_users, method="frequency",categories=10)
videos$rango_active_users <- discretize(videos$active_users, method="frequency",categories=10)
videos$rango_new_users <- discretize(videos$new_users, method="frequency",categories=10)
videos$rango_active_raffles <- discretize(videos$active_raffles, method="frequency",categories=10)
videos$rango_avg_ppv <- discretize(videos$avg_ppv, method="frequency",categories=10)
max_duracion <- max(videos$duracion)
min_duracion <- min(videos$duracion)
videos$normal_mm_duracion <- mapply(minmaxNormalization, videos$duracion, min_duracion, max_duracion)
max_release_difference <- max_na(videos$release_difference)
min_release_difference <- min_na(videos$release_difference)
videos$normal_mm_release_difference <- mapply(minmaxNormalization, videos$release_difference, min_release_difference, max_release_difference)
max_total_views <- max(videos$total_views)
min_total_views <- min(videos$total_views)
videos$normal_mm_total_views <- mapply(minmaxNormalization, videos$total_views, min_total_views, max_total_views)
max_points_given <- max(videos$points_given)
min_points_given <- min(videos$points_given)
videos$normal_mm_points_given <- mapply(minmaxNormalization, videos$points_given, min_points_given, max_points_given)
max_shares_first_day <- max_na(videos$shares_first_day)
min_shares_first_day <- min_na(videos$shares_first_day)
videos$normal_mm_shares_first_day <- mapply(minmaxNormalization, videos$shares_first_day, min_shares_first_day, max_shares_first_day)
max_shares_first_week <- max(videos$shares_first_week)
min_shares_first_week <- min(videos$shares_first_week)
videos$normal_mm_shares_first_week <- mapply(minmaxNormalization, videos$shares_first_week, min_shares_first_week, max_shares_first_week)
max_shares_first_month <- max(videos$shares_first_month)
min_shares_first_month <- min(videos$shares_first_month)
videos$normal_mm_shares_first_month <- mapply(minmaxNormalization, videos$shares_first_month, min_shares_first_month, max_shares_first_month)
max_total_shares <- max(videos$total_shares)
min_total_shares <- min(videos$total_shares)
videos$normal_mm_total_shares <- mapply(minmaxNormalization, videos$total_shares, min_total_shares, max_total_shares)
max_total_users <- max(videos$total_users)
min_total_users <- min(videos$total_users)
videos$normal_mm_total_users <- mapply(minmaxNormalization, videos$total_users, min_total_users, max_total_users)
max_active_users <- max(videos$active_users)
min_active_users <- min(videos$active_users)
videos$normal_mm_active_users <- mapply(minmaxNormalization, videos$active_users, min_active_users, max_active_users)
max_new_users <- max(videos$new_users)
min_new_users <- min(videos$new_users)
videos$normal_mm_new_users <- mapply(minmaxNormalization, videos$new_users, min_new_users, max_new_users)
max_active_raffles <- max(videos$active_raffles)
min_active_raffles <- min(videos$active_raffles)
videos$normal_mm_active_raffles <- mapply(minmaxNormalization, videos$active_raffles, min_active_raffles, max_active_raffles)
max_avg_ppv <- max_na(videos$avg_ppv)
min_avg_ppv <- min_na(videos$avg_ppv)
videos$normal_mm_avg_ppv <- mapply(minmaxNormalization, videos$avg_ppv, min_avg_ppv, max_avg_ppv)
str(videos)
minmaxNormalization()
minmaxNormalization
videos$normal_mm_release_difference <- mapply(minmaxNormalization, videos$release_difference, min_release_difference, max_release_difference)
videos$normal_mm_release_difference
mean(videos$release_difference)
mean_na <- function(vector){
registros <- 0
total <- 0
for(i in 1:length(vector)){
if(!is.na(vector[i])){
registros <- registros + 1
total <- total + vector[i]
}
}
return(maximo)
}
mean_na(videos$release_difference)
mean_na <- function(vector){
registros <- 0
total <- 0
for(i in 1:length(vector)){
if(!is.na(vector[i])){
registros <- registros + 1
total <- total + vector[i]
}
}
return(total/registros)
}
mean_na(videos$release_difference)
sd(videos$release_difference,TRUE)
mean_duracion <- mean(videos$duracion)
sd_duracion <- sd(videos$duracion)
videos$normal_mm_duracion <- mapply(zscoreNormalization, videos$duracion, sd_duracion, mean_duracion)
mean_release_difference <- mean_na(videos$release_difference)
sd_release_difference <- sd(videos$release_difference, TRUE)
videos$normal_mm_release_difference <- mapply(zscoreNormalization, videos$release_difference, sd_release_difference, mean_release_difference)
mean_total_views <- mean(videos$total_views)
sd_total_views <- sd(videos$total_views)
videos$normal_mm_total_views <- mapply(zscoreNormalization, videos$total_views, sd_total_views, mean_total_views)
mean_points_given <- mean(videos$points_given)
sd_points_given <- sd(videos$points_given)
videos$normal_mm_points_given <- mapply(zscoreNormalization, videos$points_given, sd_points_given, mean_points_given)
mean_shares_first_day <- mean_na(videos$shares_first_day)
sd_shares_first_day <- sd(videos$shares_first_day, TRUE)
videos$normal_mm_shares_first_day <- mapply(zscoreNormalization, videos$shares_first_day, sd_shares_first_day, mean_shares_first_day)
mean_shares_first_week <- mean(videos$shares_first_week)
sd_shares_first_week <- sd(videos$shares_first_week)
videos$normal_mm_shares_first_week <- mapply(zscoreNormalization, videos$shares_first_week, sd_shares_first_week, mean_shares_first_week)
mean_shares_first_month <- mean(videos$shares_first_month)
sd_shares_first_month <- sd(videos$shares_first_month)
videos$normal_mm_shares_first_month <- mapply(zscoreNormalization, videos$shares_first_month, sd_shares_first_month, mean_shares_first_month)
mean_total_shares <- mean(videos$total_shares)
sd_total_shares <- sd(videos$total_shares)
videos$normal_mm_total_shares <- mapply(zscoreNormalization, videos$total_shares, sd_total_shares, mean_total_shares)
mean_total_users <- mean(videos$total_users)
sd_total_users <- sd(videos$total_users)
videos$normal_mm_total_users <- mapply(zscoreNormalization, videos$total_users, sd_total_users, mean_total_users)
mean_active_users <- mean(videos$active_users)
sd_active_users <- sd(videos$active_users)
videos$normal_mm_active_users <- mapply(zscoreNormalization, videos$active_users, sd_active_users, mean_active_users)
mean_new_users <- mean(videos$new_users)
sd_new_users <- sd(videos$new_users)
videos$normal_mm_new_users <- mapply(zscoreNormalization, videos$new_users, sd_new_users, mean_new_users)
mean_active_raffles <- mean(videos$active_raffles)
sd_active_raffles <- sd(videos$active_raffles)
videos$normal_mm_active_raffles <- mapply(zscoreNormalization, videos$active_raffles, sd_active_raffles, mean_active_raffles)
mean_avg_ppv <- mean_na(videos$avg_ppv)
sd_avg_ppv <- sd(videos$avg_ppv, TRUE)
videos$normal_mm_avg_ppv <- mapply(zscoreNormalization, videos$avg_ppv, sd_avg_ppv, mean_avg_ppv)
str(videos)
max_duracion <- max(videos$duracion)
min_duracion <- min(videos$duracion)
videos$normal_mm_duracion <- mapply(minmaxNormalization, videos$duracion, min_duracion, max_duracion)
max_release_difference <- max_na(videos$release_difference)
min_release_difference <- min_na(videos$release_difference)
videos$normal_mm_release_difference <- mapply(minmaxNormalization, videos$release_difference, min_release_difference, max_release_difference)
max_total_views <- max(videos$total_views)
min_total_views <- min(videos$total_views)
videos$normal_mm_total_views <- mapply(minmaxNormalization, videos$total_views, min_total_views, max_total_views)
max_points_given <- max(videos$points_given)
min_points_given <- min(videos$points_given)
videos$normal_mm_points_given <- mapply(minmaxNormalization, videos$points_given, min_points_given, max_points_given)
max_shares_first_day <- max_na(videos$shares_first_day)
min_shares_first_day <- min_na(videos$shares_first_day)
videos$normal_mm_shares_first_day <- mapply(minmaxNormalization, videos$shares_first_day, min_shares_first_day, max_shares_first_day)
max_shares_first_week <- max(videos$shares_first_week)
min_shares_first_week <- min(videos$shares_first_week)
videos$normal_mm_shares_first_week <- mapply(minmaxNormalization, videos$shares_first_week, min_shares_first_week, max_shares_first_week)
max_shares_first_month <- max(videos$shares_first_month)
min_shares_first_month <- min(videos$shares_first_month)
videos$normal_mm_shares_first_month <- mapply(minmaxNormalization, videos$shares_first_month, min_shares_first_month, max_shares_first_month)
max_total_shares <- max(videos$total_shares)
min_total_shares <- min(videos$total_shares)
videos$normal_mm_total_shares <- mapply(minmaxNormalization, videos$total_shares, min_total_shares, max_total_shares)
max_total_users <- max(videos$total_users)
min_total_users <- min(videos$total_users)
videos$normal_mm_total_users <- mapply(minmaxNormalization, videos$total_users, min_total_users, max_total_users)
max_active_users <- max(videos$active_users)
min_active_users <- min(videos$active_users)
videos$normal_mm_active_users <- mapply(minmaxNormalization, videos$active_users, min_active_users, max_active_users)
max_new_users <- max(videos$new_users)
min_new_users <- min(videos$new_users)
videos$normal_mm_new_users <- mapply(minmaxNormalization, videos$new_users, min_new_users, max_new_users)
max_active_raffles <- max(videos$active_raffles)
min_active_raffles <- min(videos$active_raffles)
videos$normal_mm_active_raffles <- mapply(minmaxNormalization, videos$active_raffles, min_active_raffles, max_active_raffles)
max_avg_ppv <- max_na(videos$avg_ppv)
min_avg_ppv <- min_na(videos$avg_ppv)
videos$normal_mm_avg_ppv <- mapply(minmaxNormalization, videos$avg_ppv, min_avg_ppv, max_avg_ppv)
# Normalización por z-scores
mean_duracion <- mean(videos$duracion)
sd_duracion <- sd(videos$duracion)
videos$normal_zs_duracion <- mapply(zscoreNormalization, videos$duracion, sd_duracion, mean_duracion)
mean_release_difference <- mean_na(videos$release_difference)
sd_release_difference <- sd(videos$release_difference, TRUE)
videos$normal_zs_release_difference <- mapply(zscoreNormalization, videos$release_difference, sd_release_difference, mean_release_difference)
mean_total_views <- mean(videos$total_views)
sd_total_views <- sd(videos$total_views)
videos$normal_zs_total_views <- mapply(zscoreNormalization, videos$total_views, sd_total_views, mean_total_views)
mean_points_given <- mean(videos$points_given)
sd_points_given <- sd(videos$points_given)
videos$normal_zs_points_given <- mapply(zscoreNormalization, videos$points_given, sd_points_given, mean_points_given)
mean_shares_first_day <- mean_na(videos$shares_first_day)
sd_shares_first_day <- sd(videos$shares_first_day, TRUE)
videos$normal_zs_shares_first_day <- mapply(zscoreNormalization, videos$shares_first_day, sd_shares_first_day, mean_shares_first_day)
mean_shares_first_week <- mean(videos$shares_first_week)
sd_shares_first_week <- sd(videos$shares_first_week)
videos$normal_zs_shares_first_week <- mapply(zscoreNormalization, videos$shares_first_week, sd_shares_first_week, mean_shares_first_week)
mean_shares_first_month <- mean(videos$shares_first_month)
sd_shares_first_month <- sd(videos$shares_first_month)
videos$normal_zs_shares_first_month <- mapply(zscoreNormalization, videos$shares_first_month, sd_shares_first_month, mean_shares_first_month)
mean_total_shares <- mean(videos$total_shares)
sd_total_shares <- sd(videos$total_shares)
videos$normal_zs_total_shares <- mapply(zscoreNormalization, videos$total_shares, sd_total_shares, mean_total_shares)
mean_total_users <- mean(videos$total_users)
sd_total_users <- sd(videos$total_users)
videos$normal_zs_total_users <- mapply(zscoreNormalization, videos$total_users, sd_total_users, mean_total_users)
mean_active_users <- mean(videos$active_users)
sd_active_users <- sd(videos$active_users)
videos$normal_zs_active_users <- mapply(zscoreNormalization, videos$active_users, sd_active_users, mean_active_users)
mean_new_users <- mean(videos$new_users)
sd_new_users <- sd(videos$new_users)
videos$normal_zs_new_users <- mapply(zscoreNormalization, videos$new_users, sd_new_users, mean_new_users)
mean_active_raffles <- mean(videos$active_raffles)
sd_active_raffles <- sd(videos$active_raffles)
videos$normal_zs_active_raffles <- mapply(zscoreNormalization, videos$active_raffles, sd_active_raffles, mean_active_raffles)
mean_avg_ppv <- mean_na(videos$avg_ppv)
sd_avg_ppv <- sd(videos$avg_ppv, TRUE)
videos$normal_zs_avg_ppv <- mapply(zscoreNormalization, videos$avg_ppv, sd_avg_ppv, mean_avg_ppv)
str(videos)
View(users)
