}
optimos_kmeans_videos <- testingOptimalK(videos_kmeans)
optimos_kmeans_videos
optimos_kmeans_videos <- testingOptimalK(videos_kmeans)
optimos_kmeans_videos
#   SE BUSCA MAXIMIZAR DISTANCIA ENTRE CENTROS (BETWEENESS) Y MINIMIZAR DISTANCIA ENTRE CENTROS Y SUS DATOS (WITHINESS)
#   MAX(BETWEENSS) y MIN(WITHINSS)
testingOptimalK <- function(data){
optimistic <- as.integer(sqrt(nrow(data)/2))
kmin <- optimistic-10
kmax <- optimistic+10
if(kmin <= 0){
kmin <- 2
}
result <- data.frame(list(K = 1, betweens_to_max = 2, withins_to_min = 3))
print(paste("Iterando entre",kmin,"y",kmax,"..."))
current_row <- 0
for(k in kmin:kmax){
print(paste("k:",k))
current_row <- current_row + 1
kbet <- c()
kwit <- c()
for(i in 1:100){
kmeans_result <- kmeans(data,k)
kbet <- append(kbet,kmeans_result$betweenss)
kwit <- append(kwit,kmeans_result$tot.withinss)
}
result[current_row,] <- c(k, mean(kbet), mean(kwit))
}
return(result)
}
optimos_kmeans_videos <- testingOptimalK(videos_kmeans)
optimos_kmeans_videos
# Librerias
library(arules)
library(klaR)
library(cluster)
library(graphics)
library(fpc)
library(optpart)
library(outliers)
optimos_kmeans_videos <- testingOptimalK(videos_kmeans)
optimos_kmeans_videos
testingOptimalK <- function(data,interval){
optimistic <- as.integer(sqrt(nrow(data)/2))
kmin <- optimistic-interval
kmax <- optimistic+interval
if(kmin <= 0){
kmin <- 2
}
result <- data.frame(list(K = 1, betweens_to_max = 2, withins_to_min = 3))
print(paste("Iterando entre",kmin,"y",kmax,"..."))
current_row <- 0
for(k in kmin:kmax){
print(paste("k:",k))
current_row <- current_row + 1
kbet <- c()
kwit <- c()
for(i in 1:100){
kmeans_result <- kmeans(data,k)
kbet <- append(kbet,kmeans_result$betweenss)
kwit <- append(kwit,kmeans_result$tot.withinss)
}
result[current_row,] <- c(k, mean(kbet), mean(kwit))
}
return(result)
}
optimos_kmeans_videos <- testingOptimalK(videos_kmeans,15)
optimos_kmeans_videos
optimos_kmeans_users <- testingOptimalK(users_kmeans,15)
warnings()
optimos_kmeans_users
plot(users_kmeans)
plot(video_kmeans)
plot(videos_kmeans)
plot(videos_kmeans, videos_kmeans)
str(videos_kmeans$points_per_view)
plot(videos_kmeans$points_per_view)
View(videos_kmeans)
str(users)
str(puntos_historicos)
str(users$puntos_historicos)
View(users)
plot(users$puntos_historicos)
plot(users$puntos_historicos,ylim=c(0,100000))
plot(users$puntos_historicos,ylim=c(0,80000))
plot(users$puntos_historicos)
plot(users$puntos_historicos,ylim=c(0,70000))
plot(users$puntos_historicos,ylim=c(0,80000))
users_clean <- users
str(users_clean)
plot(users_clean$puntos_historicos)
plot(users_clean$puntos_historicos,ylim=c(0,80000))
users_clean[users_clean$puntos_historicos <= 80000]
users_clean[users_clean$puntos_historicos <= 80000, ]
users_clean <- users_clean[users_clean$puntos_historicos <= 80000, ]
plot(users_clean$puntos_historicos)
str(users_clean)
plot(users_clean$puntos)
plot(users_clean$puntos,ylim=c(0,80000))
plot(users_clean$puntos,ylim=c(0,60000))
plot(users_clean$puntos,ylim=c(0,60000))
users_clean <- users_clean[users_clean$puntos <= 60000, ]
plot(users_clean$puntos)
str(users_clean)
plot(users_clean$puntos_gastados)
plot(users_clean$puntos_gastados)
plot(users_clean$puntos_gastados,ylim=c(0,60000))
users_clean <- users_clean[users_clean$puntos_gastados <= 60000, ]
plot(users_clean$puntos_gastados)
plot(users_clean$shares_totales)
plot(users_clean$shares_totales,ylim=c(0,100))
users_clean <- users_clean[users_clean$shares_totales <= 100, ]
users_clean <- users_clean[users_clean$shares_totales <= 100, ]
plot(users_clean$shares_totales)
plot(users_clean$shares_totales,ylim=c(0,70))
users_clean <- users_clean[users_clean$shares_totales <= 70, ]
plot(users_clean$shares_totales)
plot(users$concursos_participados)
plot(users_clean$concursos_participados)
plot(users_clean$concursos_participados,ylim=c(0,10))
users_clean <- users_clean[users_clean$concursos_participados <= 10, ]
plot(users_clean$concursos_participados)
plot(users_clean$premios_canjeados)
plot(users_clean$tickets_canjeados)
plot(users_clean$tickets_canjeados)
plot(users_clean$tickets_canjeados,ylim=c(0,50))
plot(users_clean$tickets_canjeados,ylim=c(0,40))
users_clean <- users_clean[users_clean$tickets_canjeados <= 40, ]
plot(users_clean$tickets_canjeados)
videos_clean <- videos
str(videos_clean)
plot(videos_clean$points_per_view)
plot(videos_clean$points_per_view,ylim=c(0,100))
videos_clean <- videos_clean[videos_clean$points_per_view <= 100, ]
plot(videos_clean$points_per_view)
plot(videos_clean$duracion)
plot(videos_clean$duracion,ylim=c(0,600))
plot(videos_clean$duracion,ylim=c(0,700))
plot(videos_clean$duracion,ylim=c(0,600))
plot(videos_clean$duracion,ylim=c(0,550))
plot(videos_clean$duracion,ylim=c(0,520))
videos_clean <- videos_clean[videos_clean$duracion <= 520, ]
plot(videos_clean$duracion)
plot(videos_clean$release_difference)
plot(videos_clean$release_difference,ylim=c(0,100000000))
plot(videos_clean$release_difference,ylim=c(0,1000000))
plot(videos_clean$release_difference,ylim=c(0,10000000))
plot(videos_clean$release_difference,ylim=c(0,1000000))
plot(videos_clean$release_difference,ylim=c(0,800000))
videos_clean <- videos_clean[videos_clean$release_difference <= 800000, ]
plot(videos_clean$release_difference)
videos_clean <- videos_clean[videos_clean$release_difference >= 0, ]
plot(videos_clean$release_difference)
plot(videos_clean$total_views)
plot(videos_clean$total_views,ylim=c(0,40000))
plot(videos_clean$total_views,ylim=c(0,20000))
plot(videos_clean$total_views,ylim=c(0,10000))
plot(videos_clean$total_views,ylim=c(0,80000))
plot(videos_clean$total_views,ylim=c(0,8000))
plot(videos_clean$total_views,ylim=c(0,6500))
videos_clean <- videos_clean[videos_clean$total_views <= 6500, ]
plot(videos_clean$total_views)
plot(videos_clean$points_given)
plot(videos_clean$points_given,ylim=c(0,100000))
videos_clean <- videos_clean[videos_clean$points_given <= 100000, ]
plot(videos_clean$points_given)
plot(videos_clean$shares_first_day)
plot(videos_clean$shares_first_day,ylim=c(0,15))
videos_clean <- videos_clean[videos_clean$shares_first_day <= 15, ]
plot(videos_clean$shares_first_week)
plot(videos_clean$shares_first_week,ylim=c(0,30))
plot(videos_clean$shares_first_week,ylim=c(0,25))
videos_clean <- videos_clean[videos_clean$shares_first_week <= 25, ]
plot(videos_clean$shares_first_week)
plot(videos_clean$total_shares)
plot(videos_clean$total_shares,ylim=c(0,60))
plot(videos_clean$total_shares,ylim=c(0,50))
plot(videos_clean$total_shares,ylim=c(0,45))
plot(videos_clean$total_shares,ylim=c(0,40))
videos_clean <- videos_clean[videos_clean$total_shares <= 40, ]
plot(videos_clean$total_shares)
plot(videos_clean$X1_week_active_users_at_release)
plot(videos_clean$X1_week_active_users_at_release,ylim=c(0,120))
plot(videos_clean$X1_week_active_users_at_release,ylim=c(0,100))
plot(videos_clean$X1_week_active_users_at_release,ylim=c(0,112000))
plot(videos_clean$X1_week_active_users_at_release,ylim=c(0,120))
videos_clean <- videos_clean[videos_clean$X1_week_active_users_at_release <= 120, ]
plot(videos_clean$points_per_view)
videos_clean <- videos
plot(videos_clean$points_per_view)
plot(videos_clean$points_per_view,ylim=c(0,110))
videos_clean <- videos_clean[videos_clean$points_per_view <= 110, ]
plot(videos_clean$duracion)
plot(videos_clean$duracion,ylim=c(0,600))
videos_clean <- videos_clean[videos_clean$duracion <= 600, ]
plot(videos_clean$release_difference)
plot(videos_clean$release_difference,ylim=c(0,800000))
plot(videos_clean$release_difference,ylim=c(0,900000))
plot(videos_clean$release_difference,ylim=c(0,1000000))
plot(videos_clean$release_difference,ylim=c(0,5000000))
plot(videos_clean$release_difference,ylim=c(0,1000000))
videos_clean <- videos_clean[videos_clean$release_difference <= 1000000, ]
videos_clean <- videos_clean[videos_clean$release_difference >= 0, ]
plot(videos_clean$total_views)
plot(videos_clean$total_views,ylim=c(0,7500))
plot(videos_clean$total_views,ylim=c(0,6500))
videos_clean <- videos_clean[videos_clean$total_views <= 6500, ]
plot(videos_clean$points_given)
plot(videos_clean$points_given,ylim=c(0,100000))
videos_clean <- videos_clean[videos_clean$points_given <= 100000, ]
plot(videos_clean$shares_first_day)
plot(videos_clean$shares_first_day,ylim=c(0,15))
videos_clean <- videos_clean[videos_clean$shares_first_day <= 15, ]
plot(videos_clean$shares_first_week)
plot(videos_clean$shares_first_week,ylim=c(0,30))
videos_clean <- videos_clean[videos_clean$shares_first_week <= 30, ]
plot(videos_clean$total_shares)
plot(videos_clean$total_shares,ylim=c(0,100))
plot(videos_clean$total_shares,ylim=c(0,80))
videos_clean <- videos_clean[videos_clean$total_shares <= 80, ]
plot(videos_clean$total_shares)
plot(videos_clean$X1_week_active_users_at_release)
plot(videos_clean$active_raffles_at_release)
optimos_kmeans_users_clean <- testingOptimalK(users_kmeans_clean,15)
users_kmeans_clean <- users_clean[keep]
rownames(users_kmeans_clean) <- NULL
users_kmeans_clean$tickets_canjeados <- sapply(users_kmeans_clean$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })
users_kmeans_clean <- users_kmeans_clean[users_kmeans_clean$difference_last_and_first_share != -1,]
users_kmeans_clean <- users_clean[keep]
keep <-c("puntos_historicos", "puntos", "puntos_gastados", "shares_totales", "concursos_participados","tickets_canjeados","difference_last_and_first_share")
users_kmeans_clean <- users_clean[keep]
rownames(users_kmeans_clean) <- NULL
users_kmeans_clean$tickets_canjeados <- sapply(users_kmeans_clean$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })
users_kmeans_clean <- users_kmeans_clean[users_kmeans_clean$difference_last_and_first_share != -1,]
keep <- c("points_per_view","duracion","total_views","total_shares","total_users_at_release","X1_week_active_users_at_release")
videos_kmeans_clean <- videos_clean[keep]
videos_kmeans_clean <- videos_kmeans_clean[complete.cases(videos_kmeans_clean), ] # SACAR ROWS CONMISSING VALUES
names(videos_kmeans_clean)[names(videos_kmeans_clean)=="X1_week_active_users_at_release"] <- "active_users"
names(videos_kmeans_clean)[names(videos_kmeans_clean)=="total_users_at_release"] <- "total_users"
optimos_kmeans_users_clean <- testingOptimalK(users_kmeans_clean,15)
optimos_kmeans_users <- testingOptimalK(users_kmeans,15)
optimos_kmeans_users_clean <- testingOptimalK(users_kmeans_clean,15)
users_kmeans_clean
View(users_kmeans_clean)
users_clean <- users
View(users_clean)
plot(users_clean$puntos_historicos)
plot(users_clean$puntos_historicos,ylim=c(0,80000))
users_clean <- users_clean[users_clean$puntos_historicos <= 80000, ]
plot(users_clean$puntos_historicos)
# puntos
plot(users_clean$puntos)
plot(users_clean$puntos,ylim=c(0,60000))
users_clean <- users_clean[users_clean$puntos <= 60000, ]
plot(users_clean$puntos)
# puntos_gastados
plot(users_clean$puntos_gastados)
plot(users_clean$puntos_gastados,ylim=c(0,60000))
users_clean <- users_clean[users_clean$puntos_gastados <= 60000, ]
plot(users_clean$puntos_gastados)
# shares_totales
plot(users_clean$shares_totales)
plot(users_clean$shares_totales,ylim=c(0,70))
users_clean <- users_clean[users_clean$shares_totales <= 70, ]
plot(users_clean$shares_totales)
# concursos_participados
plot(users_clean$concursos_participados)
plot(users_clean$concursos_participados,ylim=c(0,10))
users_clean <- users_clean[users_clean$concursos_participados <= 10, ]
plot(users_clean$concursos_participados)
# tickets_canjeados
plot(users_clean$tickets_canjeados)
plot(users_clean$tickets_canjeados,ylim=c(0,40))
users_clean <- users_clean[users_clean$tickets_canjeados <= 40, ]
plot(users_clean$tickets_canjeados)
View(users_clean)
users_clean <- users
View(users_clean)
users_clean[users_clean$puntos_historicos <= 80000, ]
View(users_clean)
users_clean <- users
users_clean <- subset(users_clean, puntos_historicos <= 80000)
View(users_clean)
users_clean <- subset(users_clean, puntos <= 60000)
View(users_clean)
users_clean <- subset(users_clean, puntos_gastados <= 60000)
users_clean <- subset(users_clean, shares_totales <= 70)
users_clean <- subset(users_clean, concursos_participados <= 10)
users_clean <- subset(users_clean, tickets_canjeados <= 40)
View(users_clean)
videos_clean <- videos
videos_clean <- subset(videos_clean, points_per_view <= 110)
videos_clean <- subset(videos_clean, duracion <= 600)
videos_clean <- subset(videos_clean, release_difference <= 1000000)
videos_clean <- subset(videos_clean, release_difference >= 0)
videos_clean <- subset(videos_clean, total_views <= 6500)
videos_clean <- subset(videos_clean, points_given <= 100000)
videos_clean <- subset(videos_clean, shares_first_day <= 15)
videos_clean <- subset(videos_clean, shares_first_week <= 30)
videos_clean <- subset(videos_clean, total_shares <= 80)
View(videos_clean)
keep <-c("puntos_historicos", "puntos", "puntos_gastados", "shares_totales", "concursos_participados","tickets_canjeados","difference_last_and_first_share")
users_kmeans_clean <- users_clean[keep]
View(videos_clean)
View(users_clean)
View(users_kmeans_clean)
rownames(users_kmeans_clean) <- NULL
users_kmeans_clean$tickets_canjeados <- sapply(users_kmeans_clean$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })
users_kmeans_clean2 <- users_kmeans_clean[users_kmeans_clean$difference_last_and_first_share != -1,]
View(users_kmeans_clean2)
users_kmeans_clean <- users_kmeans_clean[users_kmeans_clean$difference_last_and_first_share != -1,]
keep <- c("points_per_view","duracion","total_views","total_shares","total_users_at_release","X1_week_active_users_at_release")
videos_kmeans <- videos[keep]
videos_kmeans <- videos_kmeans[complete.cases(videos_kmeans), ] # SACAR ROWS CONMISSING VALUES
names(videos_kmeans)[names(videos_kmeans)=="X1_week_active_users_at_release"] <- "active_users"
names(videos_kmeans)[names(videos_kmeans)=="total_users_at_release"] <- "total_users"
videos_kmeans_clean <- videos_clean[keep]
videos_kmeans_clean <- videos_kmeans_clean[complete.cases(videos_kmeans_clean), ] # SACAR ROWS CONMISSING VALUES
names(videos_kmeans_clean)[names(videos_kmeans_clean)=="X1_week_active_users_at_release"] <- "active_users"
names(videos_kmeans_clean)[names(videos_kmeans_clean)=="total_users_at_release"] <- "total_users"
optimos_kmeans_users_clean <- testingOptimalK(users_kmeans_clean,15)
View(users_clean)
users_clean <- users
plot(users_clean$puntos_historicos)
plot(users_clean$puntos_historicos,ylim=c(0,80000))
users_clean <- subset(users_clean, puntos_historicos <= 80000)
plot(users_clean$puntos_historicos)
plot(users_clean$puntos)
plot(users_clean$puntos,ylim=c(0,60000))
users_clean <- subset(users_clean, puntos <= 60000)
plot(users_clean$puntos_gastados)
plot(users_clean$puntos_gastados,ylim=c(0,60000))
users_clean <- subset(users_clean, puntos_gastados <= 60000)
plot(users_clean$shares_totales)
plot(users_clean$shares_totales,ylim=c(0,100))
users_clean <- subset(users_clean, shares_totales <= 100)
plot(users_clean$shares_totales)
plot(users_clean$concursos_participados)
plot(users_clean$concursos_participados,ylim=c(0,10))
users_clean <- subset(users_clean, concursos_participados <= 10)
plot(users_clean$concursos_participados)
plot(users_clean$tickets_canjeados)
plot(users_clean$tickets_canjeados,ylim=c(0,40))
plot(users_clean$tickets_canjeados)
users_clean <- subset(users_clean, tickets_canjeados <= 45)
users_clean <- users
str(users_clean)
# puntos_historicos
plot(users_clean$puntos_historicos)
plot(users_clean$puntos_historicos,ylim=c(0,80000))
users_clean <- subset(users_clean, puntos_historicos <= 80000)
plot(users_clean$puntos_historicos)
# puntos
plot(users_clean$puntos)
plot(users_clean$puntos,ylim=c(0,60000))
users_clean <- subset(users_clean, puntos <= 60000)
plot(users_clean$puntos)
# puntos_gastados
plot(users_clean$puntos_gastados)
plot(users_clean$puntos_gastados,ylim=c(0,60000))
users_clean <- subset(users_clean, puntos_gastados <= 60000)
plot(users_clean$puntos_gastados)
# shares_totales
plot(users_clean$shares_totales)
plot(users_clean$shares_totales,ylim=c(0,100))
users_clean <- subset(users_clean, shares_totales <= 100)
plot(users_clean$shares_totales)
# concursos_participados
plot(users_clean$concursos_participados)
plot(users_clean$concursos_participados,ylim=c(0,10))
users_clean <- subset(users_clean, concursos_participados <= 10)
plot(users_clean$concursos_participados)
users_clean$tickets_canjeados <- sapply(users_clean$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })
users_clean <- subset(users_clean, tickets_canjeados <= 45)
keep <-c("puntos_historicos", "puntos", "puntos_gastados", "shares_totales", "concursos_participados","tickets_canjeados","difference_last_and_first_share")
users_kmeans_clean <- users_clean[keep]
rownames(users_kmeans_clean) <- NULL
users_kmeans_clean <- users_kmeans_clean[users_kmeans_clean$difference_last_and_first_share != -1,]
optimos_kmeans_users_clean <- testingOptimalK(users_kmeans_clean,15)
optimos_kmeans_users_clean
optimos_kmeans_users
library(arules)
library(klaR)
library(cluster)
library(graphics)
library(fpc)
library(optpart)
library(outliers)
inspect(rules_users_apriori)
inspect(rules_users_eclat)
inspect(rules_videos_apriori)
users_apriori_clean <- users_clean
users_apriori_clean$hora_afiliacion <- as.factor(users_apriori_clean$hora_afiliacion)
users_apriori_clean$dia_afiliacion <- sapply(users_apriori_clean$dia_afiliacion, getDayName)
users_apriori_clean$edad <- sapply(users_apriori_clean$nacimiento, getEdad)
users_apriori_clean$tickets_canjeados <- sapply(users_apriori_clean$tickets_canjeados, cleanTicketsCanjeados)
users_apriori_clean$tickets_canjeados_rango <- mapply(generalRanges, users_apriori_clean$tickets_canjeados, 5, "tickets")
users_apriori_clean$tickets_canjeados_rango <- as.factor(users_apriori_clean$tickets_canjeados_rango)
users_apriori_clean$puntos_historicos_rango <- mapply(generalRanges, users_apriori_clean$puntos_historicos, 500, "puntos")
users_apriori_clean$puntos_historicos_rango <- as.factor(users_apriori_clean$puntos_historicos_rango)
users_apriori_clean$puntos_gastados_rango <- mapply(generalRanges, users_apriori_clean$puntos_gastados, 500, "puntos")
users_apriori_clean$puntos_gastados_rango <- as.factor(users_apriori_clean$puntos_gastados_rango)
users_apriori_clean$shares_totales_rango <- mapply(generalRanges, users_apriori_clean$shares_totales, 5, "shares")
users_apriori_clean$shares_totales_rango <- as.factor(users_apriori_clean$shares_totales_rango)
users_apriori_clean$concursos_participados_rango <- mapply(generalRanges, users_apriori_clean$concursos_participados, 5, "concursos")
users_apriori_clean$concursos_participados_rango <- as.factor(users_apriori_clean$concursos_participados_rango)
users_apriori_clean$shares_frequency <- mapply(setUserShareFrequency,users_apriori_clean$difference_last_and_first_share,users_apriori_clean$shares_totales)
users_apriori_clean$quality <- mapply(getUserQuality,users_apriori_clean$difference_last_and_first_share,users_apriori_clean$shares_frequency)
keep <- c("uni", "genero", "hora_afiliacion", "dia_afiliacion", "categoria_dominante","edad", "quality", "tickets_canjeados_rango", "puntos_historicos_rango", "puntos_gastados_rango", "shares_totales_rango", "concursos_participados_rango")
users_apriori_clean <- users_apriori_clean[keep]
rules_users_apriori_clean <- apriori(users_apriori_clean, list(support=0.1))
inspect(rules_users_apriori_clean)
rules_users_eclat <- eclat(users_apriori_clean, list(support=0.2))
inspect(rules_users_eclat)
keep <- c("category","points_per_view","points_given","release_difference","duracion", "total_views","shares_first_day","shares_first_week","shares_first_month","total_shares","total_users_at_release","X1_week_active_users_at_release","X1_week_new_users_at_release","active_raffles_at_release")
videos_apriori_clean <- videos_clean[keep]
videos_apriori_clean$duracion_rangos <- mapply(generalRanges, videos_apriori_clean$duracion, 30, "segundos")
videos_apriori_clean$duracion_rangos <- as.factor(videos_apriori_clean$duracion_rangos)
videos_apriori_clean$active_raffles_at_release_rangos <- mapply(generalRanges, videos_apriori_clean$active_raffles_at_release, 3, "concursos")
videos_apriori_clean$active_raffles_at_release_rangos <- as.factor(videos_apriori_clean$active_raffles_at_release_rangos)
videos_apriori_clean$new_users_rangos <- mapply(generalRanges, videos_apriori_clean$X1_week_new_users_at_release , 15, "usuarios")
videos_apriori_clean$new_users_rangos <- as.factor(videos_apriori_clean$new_users_rangos)
videos_apriori_clean$active_users_rangos <- mapply(generalRanges, videos_apriori_clean$X1_week_active_users_at_release , 15, "usuarios")
videos_apriori_clean$active_users_rangos <- as.factor(videos_apriori_clean$active_users_rangos)
videos_apriori_clean$total_users_rangos <- mapply(generalRanges, videos_apriori_clean$total_users_at_release , 200, "usuarios")
videos_apriori_clean$total_users_rangos <- as.factor(videos_apriori_clean$total_users_rangos)
videos_apriori_clean$total_shares_rangos <- mapply(generalRanges, videos_apriori_clean$total_shares , 10, "shares")
videos_apriori_clean$total_shares_rangos <- as.factor(videos_apriori_clean$total_shares_rangos)
videos_apriori_clean$shares_first_month_rango <- mapply(generalRanges, videos_apriori_clean$shares_first_month, 5, "shares")
videos_apriori_clean$shares_first_month_rango <- as.factor(videos_apriori_clean$shares_first_month_rango)
videos_apriori_clean$shares_first_week_rango <- mapply(generalRanges, videos_apriori_clean$shares_first_week, 5, "shares")
videos_apriori_clean$shares_first_week_rango <- as.factor(videos_apriori_clean$shares_first_week_rango)
videos_apriori_clean$shares_first_day_rango <- mapply(generalRanges, videos_apriori_clean$shares_first_day, 5, "shares")
videos_apriori_clean$shares_first_day_rango <- as.factor(videos_apriori_clean$shares_first_day_rango)
videos_apriori_clean$total_views_rango <- mapply(generalRanges, videos_apriori_clean$total_views , 50, "vistas")
videos_apriori_clean$total_views_rango <- as.factor(videos_apriori_clean$total_views_rango)
videos_apriori_clean$release_difference <- sapply(videos_apriori_clean$release_difference, function(x){if(is.na(x) || x == 0){ return(NA)} else {return(round((x/60/60/24),0))}})
videos_apriori_clean$release_difference_rango <- mapply(generalRangesWithZero, videos_apriori_clean$release_difference , 3, "dias")
videos_apriori_clean$release_difference_rango <- as.factor(videos_apriori_clean$release_difference_rango)
videos_apriori_clean$avg_ppv <- mapply(function(views, points){if(points == 0 || views == 0){ return(NA) } else { return(points/views) }}, videos_apriori_clean$total_views, videos_apriori_clean$points_given)
videos_apriori_clean$avg_ppv_rangos <- mapply(generalRanges, videos_apriori_clean$avg_ppv , 10, "puntos")
videos_apriori_clean$avg_ppv_rangos <- as.factor(videos_apriori_clean$avg_ppv_rangos)
keep <- c("active_users_rangos", "total_shares_rangos","total_views_rango","release_difference_rango","avg_ppv_rangos")
videos_apriori_clean <- videos_apriori_clean[keep]
rules_videos_apriori_clean <- apriori(videos_apriori_clean, list(support=0.2))
inspect(rules_videos_apriori_clean)
inspect(rules_videos_apriori)
rules_videos_eclat_clean <- eclat(videos_apriori_clean, list(support=0.4))
inspect(rules_videos_eclat_clean)
inspect(rules_videos_eclat)
rules_users_eclat_clean <- eclat(users_apriori_clean, list(support=0.2))
inspect(rules_users_eclat_clean)
rules_users_eclat <- eclat(users_apriori, list(support=0.2))
inspect(rules_users_eclat)
inspect(rules_users_eclat_clean)
users_kmeans
users_kmeans.fitted
users_kmeans.fitted()
fitted(users_kmeans)
kmeans.cluster
users_kmeans.cluster
users_kmeans
users_kmeans.clusters
users_kmeans.totts
keep <-c("puntos_historicos", "puntos", "puntos_gastados", "shares_totales", "concursos_participados","tickets_canjeados","difference_last_and_first_share")
users_kmeans <- users[keep]
rownames(users_kmeans) <- NULL
users_kmeans$tickets_canjeados <- sapply(users_kmeans$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })
users_kmeans <- users_kmeans[users_kmeans$difference_last_and_first_share != -1,]
users_kmeans_clean <- users_clean[keep]
rownames(users_kmeans_clean) <- NULL
users_kmeans_clean$tickets_canjeados <- sapply(users_kmeans_clean$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })
users_kmeans_clean <- users_kmeans_clean[users_kmeans_clean$difference_last_and_first_share != -1,]
videos_kmeans_result <- kmeans(videos_kmeans, 32)
videos_kmodes_result <- kmodes(videos_kmeans, 32)
users_kmeans_clean_result <- kmeans(users_kmeans_clean, 36)
users_kmeans_clean_result
users_kmeans_clean_result.totss
users_kmeans_clean_result$totss
plot(users_kmeans_clean,col=users_kmeans_clean_result$cluster)
plot(users_kmeans_clean,col=users_kmeans_clean_result$cluster)
videos_kmeans_clean_result <- kmeans(videos_clean_kmeans, 32)
keep <- c("points_per_view","duracion","total_views","total_shares","total_users_at_release","X1_week_active_users_at_release")
videos_kmeans <- videos[keep]
#videos_kmeans <- videos_kmeans[videos_kmeans$release_difference != -1, ] #SACAR RELEASE DIFFERENCE -1 (NA)
videos_kmeans <- videos_kmeans[complete.cases(videos_kmeans), ] # SACAR ROWS CONMISSING VALUES
names(videos_kmeans)[names(videos_kmeans)=="X1_week_active_users_at_release"] <- "active_users"
names(videos_kmeans)[names(videos_kmeans)=="total_users_at_release"] <- "total_users"
videos_kmeans_clean <- videos_clean[keep]
videos_kmeans_clean <- videos_kmeans_clean[complete.cases(videos_kmeans_clean), ] # SACAR ROWS CONMISSING VALUES
names(videos_kmeans_clean)[names(videos_kmeans_clean)=="X1_week_active_users_at_release"] <- "active_users"
names(videos_kmeans_clean)[names(videos_kmeans_clean)=="total_users_at_release"] <- "total_users"
videos_kmeans_clean_result <- kmeans(videos_clean_kmeans, 32)
videos_kmeans_clean_result <- kmeans(videos_kmeans_clean, 32)
plot(videos_kmeans_clean,col=videos_kmeans_clean_result$cluster)
users_agnes_clean_result <- agnes(users_clean, FALSE)
videos_agnes_clean_result <- agnes(videos_clean, FALSE)
videos_clean_discrete_agnes_result <- agnes(videos_apriori_clean, FALSE)
users_diana_result <- diana(users, FALSE)
users_diana_result
plot(users_diana_result)
plot(users_diana_result)
videos_diana_clean_result <- diana(videos_clean, FALSE)
plot(videos_diana_clean_result)
plot(videos_diana_clean_result)
plot(videos_diana_clean_result)
users_dbscan_clean_result <- dbscan(users_kmeans_clean, eps=10, MinPts=10)
plot(users_dbscan_clean_result, users_kmeans_clean)
videos_dbscan_clean_result <- dbscan(videos_kmeans_clean, eps=20)
plot(videos_dbscan_clean_result, videos_kmeans_clean)
videos_dbscan_clean_result <- dbscan(videos_kmeans_clean, eps=20,showplot=1)
