plot(users_kmeans_clean,col=users_kmeans_clean_result$cluster)
plot(users_kmeans_clean,col=users_kmeans_clean_result$cluster)
videos_kmeans_clean_result <- kmeans(videos_clean_kmeans, 32)
keep <- c("points_per_view","duracion","total_views","total_shares","total_users_at_release","X1_week_active_users_at_release")
videos_kmeans <- videos[keep]
#videos_kmeans <- videos_kmeans[videos_kmeans$release_difference != -1, ] #SACAR RELEASE DIFFERENCE -1 (NA)
videos_kmeans <- videos_kmeans[complete.cases(videos_kmeans), ] # SACAR ROWS CONMISSING VALUES
names(videos_kmeans)[names(videos_kmeans)=="X1_week_active_users_at_release"] <- "active_users"
names(videos_kmeans)[names(videos_kmeans)=="total_users_at_release"] <- "total_users"
videos_kmeans_clean <- videos_clean[keep]
videos_kmeans_clean <- videos_kmeans_clean[complete.cases(videos_kmeans_clean), ] # SACAR ROWS CONMISSING VALUES
names(videos_kmeans_clean)[names(videos_kmeans_clean)=="X1_week_active_users_at_release"] <- "active_users"
names(videos_kmeans_clean)[names(videos_kmeans_clean)=="total_users_at_release"] <- "total_users"
videos_kmeans_clean_result <- kmeans(videos_clean_kmeans, 32)
videos_kmeans_clean_result <- kmeans(videos_kmeans_clean, 32)
plot(videos_kmeans_clean,col=videos_kmeans_clean_result$cluster)
users_agnes_clean_result <- agnes(users_clean, FALSE)
videos_agnes_clean_result <- agnes(videos_clean, FALSE)
videos_clean_discrete_agnes_result <- agnes(videos_apriori_clean, FALSE)
users_diana_result <- diana(users, FALSE)
users_diana_result
plot(users_diana_result)
plot(users_diana_result)
videos_diana_clean_result <- diana(videos_clean, FALSE)
plot(videos_diana_clean_result)
plot(videos_diana_clean_result)
plot(videos_diana_clean_result)
users_dbscan_clean_result <- dbscan(users_kmeans_clean, eps=10, MinPts=10)
plot(users_dbscan_clean_result, users_kmeans_clean)
videos_dbscan_clean_result <- dbscan(videos_kmeans_clean, eps=20)
plot(videos_dbscan_clean_result, videos_kmeans_clean)
videos_dbscan_clean_result <- dbscan(videos_kmeans_clean, eps=20,showplot=1)
install.packages(c("arules", "klaR", "cluster", "fpc", "optpart"))
library(arules)
library(klaR)
library(cluster)
library(graphics)
library(fpc)
library(optpart)
users <- read.csv("Data/users.csv", header = TRUE, sep=";")
videos <- read.csv("Data/videos.csv", header = TRUE, sep=";")
#
#   SACANDO OUTLIERS
#
users_clean <- users
str(users_clean)
# puntos_historicos
plot(users_clean$puntos_historicos)
plot(users_clean$puntos_historicos,ylim=c(0,80000))
users_clean <- subset(users_clean, puntos_historicos <= 80000)
plot(users_clean$puntos_historicos)
# puntos
plot(users_clean$puntos)
plot(users_clean$puntos,ylim=c(0,60000))
users_clean <- subset(users_clean, puntos <= 60000)
plot(users_clean$puntos)
# puntos_gastados
plot(users_clean$puntos_gastados)
plot(users_clean$puntos_gastados,ylim=c(0,60000))
users_clean <- subset(users_clean, puntos_gastados <= 60000)
plot(users_clean$puntos_gastados)
# shares_totales
plot(users_clean$shares_totales)
plot(users_clean$shares_totales,ylim=c(0,100))
users_clean <- subset(users_clean, shares_totales <= 100)
plot(users_clean$shares_totales)
# concursos_participados
plot(users_clean$concursos_participados)
plot(users_clean$concursos_participados,ylim=c(0,10))
users_clean <- subset(users_clean, concursos_participados <= 10)
plot(users_clean$concursos_participados)
# tickets_canjeados
plot(users_clean$tickets_canjeados)
plot(users_clean$tickets_canjeados,ylim=c(0,45))
users_clean$tickets_canjeados <- sapply(users_clean$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })
users_clean <- subset(users_clean, tickets_canjeados <= 45)
plot(users_clean$tickets_canjeados)
videos_clean <- videos
str(videos_clean)
# points_per_view
plot(videos_clean$points_per_view)
plot(videos_clean$points_per_view,ylim=c(0,110))
videos_clean <- subset(videos_clean, points_per_view <= 110)
plot(videos_clean$points_per_view)
# duracion
plot(videos_clean$duracion)
plot(videos_clean$duracion,ylim=c(0,600))
videos_clean <- subset(videos_clean, duracion <= 600)
plot(videos_clean$duracion)
# release_difference
plot(videos_clean$release_difference)
plot(videos_clean$release_difference,ylim=c(0,1000000))
videos_clean <- subset(videos_clean, release_difference <= 1000000)
videos_clean <- subset(videos_clean, release_difference >= 0)
plot(videos_clean$release_difference)
# total_views
plot(videos_clean$total_views)
plot(videos_clean$total_views,ylim=c(0,6500))
videos_clean <- subset(videos_clean, total_views <= 6500)
plot(videos_clean$total_views)
# points_given
plot(videos_clean$points_given)
plot(videos_clean$points_given,ylim=c(0,100000))
videos_clean <- subset(videos_clean, points_given <= 100000)
plot(videos_clean$points_given)
# shares_first_day
plot(videos_clean$shares_first_day)
plot(videos_clean$shares_first_day,ylim=c(0,15))
videos_clean <- subset(videos_clean, shares_first_day <= 15)
plot(videos_clean$shares_first_day)
# shares_first_week
plot(videos_clean$shares_first_week)
plot(videos_clean$shares_first_week,ylim=c(0,30))
videos_clean <- subset(videos_clean, shares_first_week <= 30)
plot(videos_clean$shares_first_week)
# total_shares
plot(videos_clean$total_shares)
plot(videos_clean$total_shares,ylim=c(0,80))
videos_clean <- subset(videos_clean, total_shares <= 80)
plot(videos_clean$total_shares)
#
#   APRIORI + ECLAT
#
# USERS
users_apriori <- users
users_apriori$hora_afiliacion <- as.factor(users_apriori$hora_afiliacion)
users_apriori$dia_afiliacion <- sapply(users_apriori$dia_afiliacion, getDayName)
users_apriori$edad <- sapply(users_apriori$nacimiento, getEdad)
users_apriori$tickets_canjeados <- sapply(users_apriori$tickets_canjeados, cleanTicketsCanjeados)
users_apriori$tickets_canjeados_rango <- mapply(generalRanges, users_apriori$tickets_canjeados, 5, "tickets")
users_apriori$tickets_canjeados_rango <- as.factor(users_apriori$tickets_canjeados_rango)
users_apriori$puntos_historicos_rango <- mapply(generalRanges, users_apriori$puntos_historicos, 500, "puntos")
users_apriori$puntos_historicos_rango <- as.factor(users_apriori$puntos_historicos_rango)
users_apriori$puntos_gastados_rango <- mapply(generalRanges, users_apriori$puntos_gastados, 500, "puntos")
users_apriori$puntos_gastados_rango <- as.factor(users_apriori$puntos_gastados_rango)
users_apriori$shares_totales_rango <- mapply(generalRanges, users_apriori$shares_totales, 5, "shares")
users_apriori$shares_totales_rango <- as.factor(users_apriori$shares_totales_rango)
users_apriori$concursos_participados_rango <- mapply(generalRanges, users_apriori$concursos_participados, 5, "concursos")
users_apriori$concursos_participados_rango <- as.factor(users_apriori$concursos_participados_rango)
users_apriori$shares_frequency <- mapply(setUserShareFrequency,users_apriori$difference_last_and_first_share,users_apriori$shares_totales)
users_apriori$quality <- mapply(getUserQuality,users_apriori$difference_last_and_first_share,users_apriori$shares_frequency)
keep <- c("uni", "genero", "hora_afiliacion", "dia_afiliacion", "categoria_dominante","edad", "quality", "tickets_canjeados_rango", "puntos_historicos_rango", "puntos_gastados_rango", "shares_totales_rango", "concursos_participados_rango")
users_apriori <- users_apriori[keep]
rules_users_apriori <- apriori(users_apriori, list(support=0.1))
inspect(rules_users_apriori)
rules_users_eclat <- eclat(users_apriori, list(support=0.2))
inspect(rules_users_eclat)
# USERS CLEAN
users_apriori_clean <- users_clean
users_apriori_clean$hora_afiliacion <- as.factor(users_apriori_clean$hora_afiliacion)
users_apriori_clean$dia_afiliacion <- sapply(users_apriori_clean$dia_afiliacion, getDayName)
users_apriori_clean$edad <- sapply(users_apriori_clean$nacimiento, getEdad)
users_apriori_clean$tickets_canjeados <- sapply(users_apriori_clean$tickets_canjeados, cleanTicketsCanjeados)
users_apriori_clean$tickets_canjeados_rango <- mapply(generalRanges, users_apriori_clean$tickets_canjeados, 5, "tickets")
users_apriori_clean$tickets_canjeados_rango <- as.factor(users_apriori_clean$tickets_canjeados_rango)
users_apriori_clean$puntos_historicos_rango <- mapply(generalRanges, users_apriori_clean$puntos_historicos, 500, "puntos")
users_apriori_clean$puntos_historicos_rango <- as.factor(users_apriori_clean$puntos_historicos_rango)
users_apriori_clean$puntos_gastados_rango <- mapply(generalRanges, users_apriori_clean$puntos_gastados, 500, "puntos")
users_apriori_clean$puntos_gastados_rango <- as.factor(users_apriori_clean$puntos_gastados_rango)
users_apriori_clean$shares_totales_rango <- mapply(generalRanges, users_apriori_clean$shares_totales, 5, "shares")
users_apriori_clean$shares_totales_rango <- as.factor(users_apriori_clean$shares_totales_rango)
users_apriori_clean$concursos_participados_rango <- mapply(generalRanges, users_apriori_clean$concursos_participados, 5, "concursos")
users_apriori_clean$concursos_participados_rango <- as.factor(users_apriori_clean$concursos_participados_rango)
users_apriori_clean$shares_frequency <- mapply(setUserShareFrequency,users_apriori_clean$difference_last_and_first_share,users_apriori_clean$shares_totales)
users_apriori_clean$quality <- mapply(getUserQuality,users_apriori_clean$difference_last_and_first_share,users_apriori_clean$shares_frequency)
keep <- c("uni", "genero", "hora_afiliacion", "dia_afiliacion", "categoria_dominante","edad", "quality", "tickets_canjeados_rango", "puntos_historicos_rango", "puntos_gastados_rango", "shares_totales_rango", "concursos_participados_rango")
users_apriori_clean <- users_apriori_clean[keep]
rules_users_apriori_clean <- apriori(users_apriori_clean, list(support=0.1))
inspect(rules_users_apriori_clean)
rules_users_eclat_clean <- eclat(users_apriori_clean, list(support=0.2))
inspect(rules_users_eclat_clean)
# VIDEOS
keep <- c("category","points_per_view","points_given","release_difference","duracion", "total_views","shares_first_day","shares_first_week","shares_first_month","total_shares","total_users_at_release","X1_week_active_users_at_release","X1_week_new_users_at_release","active_raffles_at_release")
videos_apriori <- videos[keep]
videos_apriori$duracion_rangos <- mapply(generalRanges, videos_apriori$duracion, 30, "segundos")
videos_apriori$duracion_rangos <- as.factor(videos_apriori$duracion_rangos)
videos_apriori$active_raffles_at_release_rangos <- mapply(generalRanges, videos_apriori$active_raffles_at_release, 3, "concursos")
videos_apriori$active_raffles_at_release_rangos <- as.factor(videos_apriori$active_raffles_at_release_rangos)
videos_apriori$new_users_rangos <- mapply(generalRanges, videos_apriori$X1_week_new_users_at_release , 15, "usuarios")
videos_apriori$new_users_rangos <- as.factor(videos_apriori$new_users_rangos)
videos_apriori$active_users_rangos <- mapply(generalRanges, videos_apriori$X1_week_active_users_at_release , 15, "usuarios")
videos_apriori$active_users_rangos <- as.factor(videos_apriori$active_users_rangos)
videos_apriori$total_users_rangos <- mapply(generalRanges, videos_apriori$total_users_at_release , 200, "usuarios")
videos_apriori$total_users_rangos <- as.factor(videos_apriori$total_users_rangos)
videos_apriori$total_shares_rangos <- mapply(generalRanges, videos_apriori$total_shares , 10, "shares")
videos_apriori$total_shares_rangos <- as.factor(videos_apriori$total_shares_rangos)
videos_apriori$shares_first_month_rango <- mapply(generalRanges, videos_apriori$shares_first_month, 5, "shares")
videos_apriori$shares_first_month_rango <- as.factor(videos_apriori$shares_first_month_rango)
videos_apriori$shares_first_week_rango <- mapply(generalRanges, videos_apriori$shares_first_week, 5, "shares")
videos_apriori$shares_first_week_rango <- as.factor(videos_apriori$shares_first_week_rango)
videos_apriori$shares_first_day_rango <- mapply(generalRanges, videos_apriori$shares_first_day, 5, "shares")
videos_apriori$shares_first_day_rango <- as.factor(videos_apriori$shares_first_day_rango)
videos_apriori$total_views_rango <- mapply(generalRanges, videos_apriori$total_views , 50, "vistas")
videos_apriori$total_views_rango <- as.factor(videos_apriori$total_views_rango)
videos_apriori$release_difference <- sapply(videos_apriori$release_difference, function(x){if(is.na(x) || x == 0){ return(NA)} else {return(round((x/60/60/24),0))}})
videos_apriori$release_difference_rango <- mapply(generalRangesWithZero, videos_apriori$release_difference , 3, "dias")
videos_apriori$release_difference_rango <- as.factor(videos_apriori$release_difference_rango)
videos_apriori$avg_ppv <- mapply(function(views, points){if(points == 0 || views == 0){ return(NA) } else { return(points/views) }}, videos_apriori$total_views, videos_apriori$points_given)
videos_apriori$avg_ppv_rangos <- mapply(generalRanges, videos_apriori$avg_ppv , 10, "puntos")
videos_apriori$avg_ppv_rangos <- as.factor(videos_apriori$avg_ppv_rangos)
keep <- c("active_users_rangos", "total_shares_rangos","total_views_rango","release_difference_rango","avg_ppv_rangos")
videos_apriori <- videos_apriori[keep]
rules_videos_apriori <- apriori(videos_apriori, list(support=0.2))
inspect(rules_videos_apriori)
rules_videos_eclat <- eclat(videos_apriori, list(support=0.4))
inspect(rules_videos_eclat)
# VIDEOS CLEAN
keep <- c("category","points_per_view","points_given","release_difference","duracion", "total_views","shares_first_day","shares_first_week","shares_first_month","total_shares","total_users_at_release","X1_week_active_users_at_release","X1_week_new_users_at_release","active_raffles_at_release")
videos_apriori_clean <- videos_clean[keep]
videos_apriori_clean$duracion_rangos <- mapply(generalRanges, videos_apriori_clean$duracion, 30, "segundos")
videos_apriori_clean$duracion_rangos <- as.factor(videos_apriori_clean$duracion_rangos)
videos_apriori_clean$active_raffles_at_release_rangos <- mapply(generalRanges, videos_apriori_clean$active_raffles_at_release, 3, "concursos")
videos_apriori_clean$active_raffles_at_release_rangos <- as.factor(videos_apriori_clean$active_raffles_at_release_rangos)
videos_apriori_clean$new_users_rangos <- mapply(generalRanges, videos_apriori_clean$X1_week_new_users_at_release , 15, "usuarios")
videos_apriori_clean$new_users_rangos <- as.factor(videos_apriori_clean$new_users_rangos)
videos_apriori_clean$active_users_rangos <- mapply(generalRanges, videos_apriori_clean$X1_week_active_users_at_release , 15, "usuarios")
videos_apriori_clean$active_users_rangos <- as.factor(videos_apriori_clean$active_users_rangos)
videos_apriori_clean$total_users_rangos <- mapply(generalRanges, videos_apriori_clean$total_users_at_release , 200, "usuarios")
videos_apriori_clean$total_users_rangos <- as.factor(videos_apriori_clean$total_users_rangos)
videos_apriori_clean$total_shares_rangos <- mapply(generalRanges, videos_apriori_clean$total_shares , 10, "shares")
videos_apriori_clean$total_shares_rangos <- as.factor(videos_apriori_clean$total_shares_rangos)
videos_apriori_clean$shares_first_month_rango <- mapply(generalRanges, videos_apriori_clean$shares_first_month, 5, "shares")
videos_apriori_clean$shares_first_month_rango <- as.factor(videos_apriori_clean$shares_first_month_rango)
videos_apriori_clean$shares_first_week_rango <- mapply(generalRanges, videos_apriori_clean$shares_first_week, 5, "shares")
videos_apriori_clean$shares_first_week_rango <- as.factor(videos_apriori_clean$shares_first_week_rango)
videos_apriori_clean$shares_first_day_rango <- mapply(generalRanges, videos_apriori_clean$shares_first_day, 5, "shares")
videos_apriori_clean$shares_first_day_rango <- as.factor(videos_apriori_clean$shares_first_day_rango)
videos_apriori_clean$total_views_rango <- mapply(generalRanges, videos_apriori_clean$total_views , 50, "vistas")
videos_apriori_clean$total_views_rango <- as.factor(videos_apriori_clean$total_views_rango)
videos_apriori_clean$release_difference <- sapply(videos_apriori_clean$release_difference, function(x){if(is.na(x) || x == 0){ return(NA)} else {return(round((x/60/60/24),0))}})
videos_apriori_clean$release_difference_rango <- mapply(generalRangesWithZero, videos_apriori_clean$release_difference , 3, "dias")
videos_apriori_clean$release_difference_rango <- as.factor(videos_apriori_clean$release_difference_rango)
videos_apriori_clean$avg_ppv <- mapply(function(views, points){if(points == 0 || views == 0){ return(NA) } else { return(points/views) }}, videos_apriori_clean$total_views, videos_apriori_clean$points_given)
videos_apriori_clean$avg_ppv_rangos <- mapply(generalRanges, videos_apriori_clean$avg_ppv , 10, "puntos")
videos_apriori_clean$avg_ppv_rangos <- as.factor(videos_apriori_clean$avg_ppv_rangos)
keep <- c("active_users_rangos", "total_shares_rangos","total_views_rango","release_difference_rango","avg_ppv_rangos")
videos_apriori_clean <- videos_apriori_clean[keep]
rules_videos_apriori_clean <- apriori(videos_apriori_clean, list(support=0.2))
inspect(rules_videos_apriori_clean)
rules_videos_eclat_clean <- eclat(videos_apriori_clean, list(support=0.4))
inspect(rules_videos_eclat_clean)
#
#   K-MEANS + K-MODES
#
# USERS
keep <-c("puntos_historicos", "puntos", "puntos_gastados", "shares_totales", "concursos_participados","tickets_canjeados","difference_last_and_first_share")
users_kmeans <- users[keep]
rownames(users_kmeans) <- NULL
users_kmeans$tickets_canjeados <- sapply(users_kmeans$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })
users_kmeans <- users_kmeans[users_kmeans$difference_last_and_first_share != -1,]
users_kmeans_clean <- users_clean[keep]
rownames(users_kmeans_clean) <- NULL
users_kmeans_clean$tickets_canjeados <- sapply(users_kmeans_clean$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })
users_kmeans_clean <- users_kmeans_clean[users_kmeans_clean$difference_last_and_first_share != -1,]
# VIDEOS
keep <- c("points_per_view","duracion","total_views","total_shares","total_users_at_release","X1_week_active_users_at_release")
videos_kmeans <- videos[keep]
#videos_kmeans <- videos_kmeans[videos_kmeans$release_difference != -1, ] #SACAR RELEASE DIFFERENCE -1 (NA)
videos_kmeans <- videos_kmeans[complete.cases(videos_kmeans), ] # SACAR ROWS CONMISSING VALUES
names(videos_kmeans)[names(videos_kmeans)=="X1_week_active_users_at_release"] <- "active_users"
names(videos_kmeans)[names(videos_kmeans)=="total_users_at_release"] <- "total_users"
videos_kmeans_clean <- videos_clean[keep]
videos_kmeans_clean <- videos_kmeans_clean[complete.cases(videos_kmeans_clean), ] # SACAR ROWS CONMISSING VALUES
names(videos_kmeans_clean)[names(videos_kmeans_clean)=="X1_week_active_users_at_release"] <- "active_users"
names(videos_kmeans_clean)[names(videos_kmeans_clean)=="total_users_at_release"] <- "total_users"
#   SE BUSCA MAXIMIZAR DISTANCIA ENTRE CENTROS (BETWEENESS) Y MINIMIZAR DISTANCIA ENTRE CENTROS Y SUS DATOS (WITHINESS)
#   MAX(BETWEENSS) y MIN(WITHINSS)
optimos_kmeans_users <- testingOptimalK(users_kmeans,15)
optimos_kmeans_users_clean <- testingOptimalK(users_kmeans_clean,15)
# SE DESPRENDE QUE EL K OPTIMO PARA LOS DATOS ES K = 36
users_kmeans_result <- kmeans(users_kmeans, 36)
users_kmodes_result <- kmodes(users_kmeans, 36)
users_kmeans_clean_result <- kmeans(users_kmeans_clean, 36)
users_kmodes_clean_result <- kmodes(users_kmeans_clean, 36)
plot(users_kmeans_clean,col=users_kmeans_clean_result$cluster)
optimos_kmeans_videos <- testingOptimalK(videos_kmeans,15)
# SE DESPRENDE QUE EL K OPTIMO PARA LOS DATOS ES K = 32
videos_kmeans_result <- kmeans(videos_kmeans, 32)
videos_kmodes_result <- kmodes(videos_kmeans, 32)
videos_kmeans_clean_result <- kmeans(videos_kmeans_clean, 32)
videos_kmodes_clean_result <- kmodes(videos_kmeans_clean, 32)
plot(videos_kmeans_clean,col=videos_kmeans_clean_result$cluster)
#
#   DIST MATRIX
#
videos_dist = dist(videos_kmeans)
users_dist = dist(users_kmeans)
#
#   AGGLOMERATIVE NESTING
#
# USERS
users_agnes_result <- agnes(users, FALSE)
users_discrete_agnes_result <- agnes(users_apriori, FALSE)
users_agnes_clean_result <- agnes(users_clean, FALSE)
users_clean_discrete_agnes_result <- agnes(users_apriori_clean, FALSE)
# VIDEOS
videos_agnes_result <- agnes(videos, FALSE)
videos_discrete_agnes_result <- agnes(videos_apriori, FALSE)
videos_agnes_clean_result <- agnes(videos_clean, FALSE)
videos_clean_discrete_agnes_result <- agnes(videos_apriori_clean, FALSE)
#
#   Divisive Analysis
#
# USERS
users_diana_result <- diana(users, FALSE)
users_discrete_diana_result <- diana(users_apriori, FALSE)
users_diana_clean_result <- diana(users_clean, FALSE)
users_clean_discrete_diana_result <- diana(users_apriori_clean, FALSE)
# VIDEOS
videos_diana_result <- diana(videos, FALSE)
videos_discrete_diana_result <- diana(videos_apriori, FALSE)
videos_diana_clean_result <- diana(videos_clean, FALSE)
videos_clean_discrete_diana_result <- diana(videos_apriori_clean, FALSE)
#
#   DBSCAN
#
# USERS
users_dbscan_result <- dbscan(users_kmeans, eps=10, MinPts=10)
plot(users_dbscan_result, users_kmeans)
users_dbscan_clean_result <- dbscan(users_kmeans_clean, eps=10, MinPts=10)
plot(users_dbscan_clean_result, users_kmeans_clean)
# VIDEOS
videos_dbscan_result <- dbscan(videos_kmeans, eps=20)
plot(videos_dbscan_result, videos_kmeans)
videos_dbscan_clean_result <- dbscan(videos_kmeans_clean, eps=20,showplot=1)
plot(videos_dbscan_clean_result, videos_kmeans_clean)
optimos_kmeans_users
# Data
users <- read.csv("Data/users.csv", header = TRUE, sep=";")
videos <- read.csv("Data/videos.csv", header = TRUE, sep=";")
#
#   SACANDO OUTLIERS
#
users_clean <- users
str(users_clean)
# puntos_historicos
plot(users_clean$puntos_historicos)
plot(users_clean$puntos_historicos,ylim=c(0,80000))
users_clean <- subset(users_clean, puntos_historicos <= 80000)
plot(users_clean$puntos_historicos)
# puntos
plot(users_clean$puntos)
plot(users_clean$puntos,ylim=c(0,60000))
users_clean <- subset(users_clean, puntos <= 60000)
plot(users_clean$puntos)
# puntos_gastados
plot(users_clean$puntos_gastados)
plot(users_clean$puntos_gastados,ylim=c(0,60000))
users_clean <- subset(users_clean, puntos_gastados <= 60000)
plot(users_clean$puntos_gastados)
# shares_totales
plot(users_clean$shares_totales)
plot(users_clean$shares_totales,ylim=c(0,100))
users_clean <- subset(users_clean, shares_totales <= 100)
plot(users_clean$shares_totales)
# concursos_participados
plot(users_clean$concursos_participados)
plot(users_clean$concursos_participados,ylim=c(0,10))
users_clean <- subset(users_clean, concursos_participados <= 10)
plot(users_clean$concursos_participados)
# tickets_canjeados
plot(users_clean$tickets_canjeados)
plot(users_clean$tickets_canjeados,ylim=c(0,45))
users_clean$tickets_canjeados <- sapply(users_clean$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })
users_clean <- subset(users_clean, tickets_canjeados <= 45)
plot(users_clean$tickets_canjeados)
videos_clean <- videos
str(videos_clean)
# points_per_view
plot(videos_clean$points_per_view)
plot(videos_clean$points_per_view,ylim=c(0,110))
videos_clean <- subset(videos_clean, points_per_view <= 110)
plot(videos_clean$points_per_view)
# duracion
plot(videos_clean$duracion)
plot(videos_clean$duracion,ylim=c(0,600))
videos_clean <- subset(videos_clean, duracion <= 600)
plot(videos_clean$duracion)
# release_difference
plot(videos_clean$release_difference)
plot(videos_clean$release_difference,ylim=c(0,1000000))
videos_clean <- subset(videos_clean, release_difference <= 1000000)
videos_clean <- subset(videos_clean, release_difference >= 0)
plot(videos_clean$release_difference)
# total_views
plot(videos_clean$total_views)
plot(videos_clean$total_views,ylim=c(0,6500))
videos_clean <- subset(videos_clean, total_views <= 6500)
plot(videos_clean$total_views)
# points_given
plot(videos_clean$points_given)
plot(videos_clean$points_given,ylim=c(0,100000))
videos_clean <- subset(videos_clean, points_given <= 100000)
plot(videos_clean$points_given)
# shares_first_day
plot(videos_clean$shares_first_day)
plot(videos_clean$shares_first_day,ylim=c(0,15))
videos_clean <- subset(videos_clean, shares_first_day <= 15)
plot(videos_clean$shares_first_day)
# shares_first_week
plot(videos_clean$shares_first_week)
plot(videos_clean$shares_first_week,ylim=c(0,30))
videos_clean <- subset(videos_clean, shares_first_week <= 30)
plot(videos_clean$shares_first_week)
# total_shares
plot(videos_clean$total_shares)
plot(videos_clean$total_shares,ylim=c(0,80))
videos_clean <- subset(videos_clean, total_shares <= 80)
plot(videos_clean$total_shares)
str(videos_clean)
videos_clean$avg_ppv <- mapply(function(views, points){if(points == 0 || views == 0){ return(NA) } else { return(points/views) }}, videos_apriori$total_views, videos_apriori$points_given)
videos_clean$avg_ppv <- mapply(function(views, points){if(points == 0 || views == 0){ return(NA) } else { return(points/views) }}, videos_clean$total_views, videos_clean$points_given)
str(videos_clean)
keep <- c("category", "duracion", "release_difference", "total_views", "shares_first_day", "total_shares", "X1_week_active_users_at_release","X1_week_active_raffles", "avg_ppv")
videos_clean <- videos_clean[keep]
str(videos_clean)
install.packages("party")
library(party)
str(videos_clean)
plot(videos_clean$total_views)
videos$avg_ppv <- mapply(function(views, points){if(points == 0 || views == 0){ return(NA) } else { return(points/views) }}, videos_clean$total_views, videos_clean$points_given)
videos$avg_ppv <- mapply(function(views, points){if(points == 0 || views == 0){ return(NA) } else { return(points/views) }}, videos$total_views, videos$points_given)
videos_keep <- videos[keep]
plot(videos_keep$total_views)
plot(videos_keep$total_shares)
plot(videos_keep$total_views)
plot(videos_keep$total_shares)
users_clean <- users
str(users_clean)
# puntos_historicos
plot(users_clean$puntos_historicos)
plot(users_clean$puntos_historicos,ylim=c(0,80000))
users_clean <- subset(users_clean, puntos_historicos <= 80000)
plot(users_clean$puntos_historicos)
# puntos
plot(users_clean$puntos)
plot(users_clean$puntos,ylim=c(0,60000))
users_clean <- subset(users_clean, puntos <= 60000)
plot(users_clean$puntos)
# puntos_gastados
plot(users_clean$puntos_gastados)
plot(users_clean$puntos_gastados,ylim=c(0,60000))
users_clean <- subset(users_clean, puntos_gastados <= 60000)
plot(users_clean$puntos_gastados)
# shares_totales
plot(users_clean$shares_totales)
plot(users_clean$shares_totales,ylim=c(0,100))
users_clean <- subset(users_clean, shares_totales <= 100)
plot(users_clean$shares_totales)
# concursos_participados
plot(users_clean$concursos_participados)
plot(users_clean$concursos_participados,ylim=c(0,10))
users_clean <- subset(users_clean, concursos_participados <= 10)
plot(users_clean$concursos_participados)
# tickets_canjeados
plot(users_clean$tickets_canjeados)
plot(users_clean$tickets_canjeados,ylim=c(0,45))
users_clean$tickets_canjeados <- sapply(users_clean$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })
users_clean <- subset(users_clean, tickets_canjeados <= 45)
plot(users_clean$tickets_canjeados)
videos_clean <- videos
str(videos_clean)
# points_per_view
plot(videos_clean$points_per_view)
plot(videos_clean$points_per_view,ylim=c(0,110))
videos_clean <- subset(videos_clean, points_per_view <= 110)
plot(videos_clean$points_per_view)
# duracion
plot(videos_clean$duracion)
plot(videos_clean$duracion,ylim=c(0,600))
videos_clean <- subset(videos_clean, duracion <= 600)
plot(videos_clean$duracion)
# release_difference
plot(videos_clean$release_difference)
plot(videos_clean$release_difference,ylim=c(0,1000000))
videos_clean <- subset(videos_clean, release_difference <= 1000000)
videos_clean <- subset(videos_clean, release_difference >= 0)
plot(videos_clean$release_difference)
# total_views
plot(videos_clean$total_views)
plot(videos_clean$total_views,ylim=c(0,6500))
videos_clean <- subset(videos_clean, total_views <= 6500)
plot(videos_clean$total_views)
# points_given
plot(videos_clean$points_given)
plot(videos_clean$points_given,ylim=c(0,100000))
videos_clean <- subset(videos_clean, points_given <= 100000)
plot(videos_clean$points_given)
# shares_first_day
plot(videos_clean$shares_first_day)
plot(videos_clean$shares_first_day,ylim=c(0,15))
videos_clean <- subset(videos_clean, shares_first_day <= 15)
plot(videos_clean$shares_first_day)
# shares_first_week
plot(videos_clean$shares_first_week)
plot(videos_clean$shares_first_week,ylim=c(0,30))
videos_clean <- subset(videos_clean, shares_first_week <= 30)
plot(videos_clean$shares_first_week)
# total_shares
plot(videos_clean$total_shares)
plot(videos_clean$total_shares,ylim=c(0,80))
videos_clean <- subset(videos_clean, total_shares <= 80)
plot(videos_clean$total_shares)
videos_clean$avg_ppv <- mapply(function(views, points){if(points == 0 || views == 0){ return(NA) } else { return(points/views) }}, videos_clean$total_views, videos_clean$points_given)
videos$avg_ppv <- mapply(function(views, points){if(points == 0 || views == 0){ return(NA) } else { return(points/views) }}, videos$total_views, videos$points_given)
keep <- c("category", "duracion", "release_difference", "shares_first_day", "X1_week_active_users_at_release","X1_week_active_raffles", "avg_ppv", "success")
videos_clean_kept <- videos_clean[keep]
videos_clean$success <- mapply(function(views, shares){if(shares > 100 || views >= 8000){ return(1) } else { return(0) }}, videos_clean$total_views, videos_clean$total_shares)
videos$success <- mapply(function(views, shares){if(shares > 100 || views >= 8000){ return(1) } else { return(0) }}, videos$total_views, videos$total_shares)
keep <- c("category", "duracion", "release_difference", "shares_first_day", "X1_week_active_users_at_release","X1_week_active_raffles", "avg_ppv", "success")
videos_clean_kept <- videos_clean[keep]
videos_kept <- videos[keep]
