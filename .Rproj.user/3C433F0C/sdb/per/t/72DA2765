{
    "contents" : "# Utilities\ngetDayName <- function(x){\n  if(x==0){\n    as.factor(\"Lunes\")\n  }\n  else{\n    if(x==1){\n      as.factor(\"Martes\")\n    }\n    else{\n      if(x==2){\n        as.factor(\"Miercoles\")\n      }\n      else{\n        if(x==3){\n          as.factor(\"Jueves\")\n        }\n        else{\n          if(x==4){\n            as.factor(\"Viernes\")\n          }\n          else{\n            if(x==5){\n              as.factor(\"Sabado\")\n            }\n            else{\n              as.factor(\"Domingo\")\n            }\n          }\n        }\n      }\n    }\n  }\n}\nsetUserShareFrequency <- function(x,y){\n  if(y==0){\n    0\n  }\n  else{\n    x/y\n  }\n}\ngetUserQuality <- function(x,y){\n  if(x==-1){\n    as.factor(\"No interesado/No comprendiÃ³\")\n  }\n  else{\n    if(x==0){\n      as.factor(\"No capturado\")\n    }\n    else{\n      if(y<=1){\n        if(x>=30 && x<=60){\n          as.factor(\"Diario por un mes\")\n        }\n        else{\n          if(x>=7 && x<=29){\n            as.factor(\"Diario por una semana\")\n          }\n          else{\n            if(x <=6){\n              as.factor(\"Perdido\")\n            }\n            else{\n              as.factor(\"Diario constante\")\n            }\n          }\n        }\n      }\n      else{\n        if(y<=7){\n          if(x>=30 && x<=60){\n            as.factor(\"Semenal por un mes\")\n          }\n          else{\n            if(x<=29){\n              as.factor(\"Perdido\")\n            }\n            else{\n              as.factor(\"Semanal constante\")\n            }\n          }\n        }\n        else{\n          as.factor(\"Perdido\")\n        }\n      }\n    }\n  }\n}\ngetEdad <- function(fecha_nacimiento){\n  if(!is.na(fecha_nacimiento)){\n    nacimiento <- strptime(fecha_nacimiento, format = \"%Y-%m-%d\")\n    hoy <- Sys.Date()\n    edad <- difftime(hoy,nacimiento)\n    \n    as.factor(as.integer(as.numeric(edad, units=\"days\")/365))\n  }\n  else{\n    as.factor(NA)\n  }\n}\ncleanTicketsCanjeados <- function(tickets_canjeados){\n  if(is.na(tickets_canjeados)){\n    0\n  }\n  else{\n    as.numeric(tickets_canjeados)\n  }\n}\ngeneralRanges <- function(variable, range, unit){\n  if(is.na(variable) || variable == 0){\n    return(NA)\n  }\n  else{\n    rango = as.integer(variable/range)\n    paste(\"Entre\",((rango*range)+1),\"y\",((rango*range)+range),unit)\n  }\n}\ngeneralRangesWithZero <- function(variable, range, unit){\n  if(is.na(variable)){\n    return(NA)\n  }\n  else{\n    rango = as.integer(variable/range)\n    paste(\"Entre\",((rango*range)),\"y\",((rango*range)+(range-1)),unit)\n  }\n}\ntestingOptimalK <- function(data,interval){\n  optimistic <- as.integer(sqrt(nrow(data)/2))\n  kmin <- optimistic-interval\n  kmax <- optimistic+interval\n  if(kmin <= 0){\n    kmin <- 2\n  }\n  result <- data.frame(list(K = 1, betweens_to_max = 2, withins_to_min = 3))\n  print(paste(\"Iterando entre\",kmin,\"y\",kmax,\"...\"))\n  current_row <- 0\n  for(k in kmin:kmax){\n    print(paste(\"k:\",k))\n    current_row <- current_row + 1\n    kbet <- c()\n    kwit <- c()\n    for(i in 1:100){\n      kmeans_result <- kmeans(data,k)\n      kbet <- append(kbet,kmeans_result$betweenss)\n      kwit <- append(kwit,kmeans_result$tot.withinss)\n    }\n    result[current_row,] <- c(k, mean(kbet), mean(kwit))\n  }\n  return(result)\n}\n\n# Librerias\nlibrary(arules)\nlibrary(klaR)\nlibrary(cluster)\nlibrary(graphics)\nlibrary(fpc)\nlibrary(optpart)\n\n# Data\n\nusers <- read.csv(\"Data/users.csv\", header = TRUE, sep=\";\")\nvideos <- read.csv(\"Data/videos.csv\", header = TRUE, sep=\";\")\n\n\n#\n#   SACANDO OUTLIERS\n#\n\nusers_clean <- users\nstr(users_clean)\n\n# puntos_historicos\nplot(users_clean$puntos_historicos)\nplot(users_clean$puntos_historicos,ylim=c(0,80000))\nusers_clean <- subset(users_clean, puntos_historicos <= 80000)\nplot(users_clean$puntos_historicos)\n\n# puntos\n\nplot(users_clean$puntos)\nplot(users_clean$puntos,ylim=c(0,60000))\nusers_clean <- subset(users_clean, puntos <= 60000)\nplot(users_clean$puntos)\n\n# puntos_gastados\n\nplot(users_clean$puntos_gastados)\nplot(users_clean$puntos_gastados,ylim=c(0,60000))\nusers_clean <- subset(users_clean, puntos_gastados <= 60000)\nplot(users_clean$puntos_gastados)\n\n# shares_totales\n\nplot(users_clean$shares_totales)\nplot(users_clean$shares_totales,ylim=c(0,100))\nusers_clean <- subset(users_clean, shares_totales <= 100)\nplot(users_clean$shares_totales)\n\n# concursos_participados\n\nplot(users_clean$concursos_participados)\nplot(users_clean$concursos_participados,ylim=c(0,10))\nusers_clean <- subset(users_clean, concursos_participados <= 10)\nplot(users_clean$concursos_participados)\n\n# tickets_canjeados\n\nplot(users_clean$tickets_canjeados)\nplot(users_clean$tickets_canjeados,ylim=c(0,45))\nusers_clean$tickets_canjeados <- sapply(users_clean$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })\nusers_clean <- subset(users_clean, tickets_canjeados <= 45)\nplot(users_clean$tickets_canjeados)\n\n\nvideos_clean <- videos\nstr(videos_clean)\n\n# points_per_view\n\nplot(videos_clean$points_per_view)\nplot(videos_clean$points_per_view,ylim=c(0,110))\nvideos_clean <- subset(videos_clean, points_per_view <= 110)\nplot(videos_clean$points_per_view)\n\n# duracion\n\nplot(videos_clean$duracion)\nplot(videos_clean$duracion,ylim=c(0,600))\nvideos_clean <- subset(videos_clean, duracion <= 600)\nplot(videos_clean$duracion)\n\n# release_difference\n\nplot(videos_clean$release_difference)\nplot(videos_clean$release_difference,ylim=c(0,1000000))\nvideos_clean <- subset(videos_clean, release_difference <= 1000000)\nvideos_clean <- subset(videos_clean, release_difference >= 0)\nplot(videos_clean$release_difference)\n\n# total_views\n\nplot(videos_clean$total_views)\nplot(videos_clean$total_views,ylim=c(0,6500))\nvideos_clean <- subset(videos_clean, total_views <= 6500)\nplot(videos_clean$total_views)\n\n# points_given\n\nplot(videos_clean$points_given)\nplot(videos_clean$points_given,ylim=c(0,100000))\nvideos_clean <- subset(videos_clean, points_given <= 100000)\nplot(videos_clean$points_given)\n\n# shares_first_day\n\nplot(videos_clean$shares_first_day)\nplot(videos_clean$shares_first_day,ylim=c(0,15))\nvideos_clean <- subset(videos_clean, shares_first_day <= 15)\nplot(videos_clean$shares_first_day)\n\n# shares_first_week\n\nplot(videos_clean$shares_first_week)\nplot(videos_clean$shares_first_week,ylim=c(0,30))\nvideos_clean <- subset(videos_clean, shares_first_week <= 30)\nplot(videos_clean$shares_first_week)\n\n# total_shares\n\nplot(videos_clean$total_shares)\nplot(videos_clean$total_shares,ylim=c(0,80))\nvideos_clean <- subset(videos_clean, total_shares <= 80)\nplot(videos_clean$total_shares)\n\n#\n#   APRIORI + ECLAT\n#\n\n# USERS\n\nusers_apriori <- users\nusers_apriori$hora_afiliacion <- as.factor(users_apriori$hora_afiliacion)\nusers_apriori$dia_afiliacion <- sapply(users_apriori$dia_afiliacion, getDayName)\n\nusers_apriori$edad <- sapply(users_apriori$nacimiento, getEdad)\n\nusers_apriori$tickets_canjeados <- sapply(users_apriori$tickets_canjeados, cleanTicketsCanjeados)\n\nusers_apriori$tickets_canjeados_rango <- mapply(generalRanges, users_apriori$tickets_canjeados, 5, \"tickets\")\nusers_apriori$tickets_canjeados_rango <- as.factor(users_apriori$tickets_canjeados_rango)\n\nusers_apriori$puntos_historicos_rango <- mapply(generalRanges, users_apriori$puntos_historicos, 500, \"puntos\")\nusers_apriori$puntos_historicos_rango <- as.factor(users_apriori$puntos_historicos_rango)\n\nusers_apriori$puntos_gastados_rango <- mapply(generalRanges, users_apriori$puntos_gastados, 500, \"puntos\")\nusers_apriori$puntos_gastados_rango <- as.factor(users_apriori$puntos_gastados_rango)\n\nusers_apriori$shares_totales_rango <- mapply(generalRanges, users_apriori$shares_totales, 5, \"shares\")\nusers_apriori$shares_totales_rango <- as.factor(users_apriori$shares_totales_rango)\n\nusers_apriori$concursos_participados_rango <- mapply(generalRanges, users_apriori$concursos_participados, 5, \"concursos\")\nusers_apriori$concursos_participados_rango <- as.factor(users_apriori$concursos_participados_rango)\n\nusers_apriori$shares_frequency <- mapply(setUserShareFrequency,users_apriori$difference_last_and_first_share,users_apriori$shares_totales)\nusers_apriori$quality <- mapply(getUserQuality,users_apriori$difference_last_and_first_share,users_apriori$shares_frequency)\n\nkeep <- c(\"uni\", \"genero\", \"hora_afiliacion\", \"dia_afiliacion\", \"categoria_dominante\",\"edad\", \"quality\", \"tickets_canjeados_rango\", \"puntos_historicos_rango\", \"puntos_gastados_rango\", \"shares_totales_rango\", \"concursos_participados_rango\")\nusers_apriori <- users_apriori[keep]\n\nrules_users_apriori <- apriori(users_apriori, list(support=0.1))\ninspect(rules_users_apriori)\n\nrules_users_eclat <- eclat(users_apriori, list(support=0.2))\ninspect(rules_users_eclat)\n\n# USERS CLEAN\n\nusers_apriori_clean <- users_clean\nusers_apriori_clean$hora_afiliacion <- as.factor(users_apriori_clean$hora_afiliacion)\nusers_apriori_clean$dia_afiliacion <- sapply(users_apriori_clean$dia_afiliacion, getDayName)\n\nusers_apriori_clean$edad <- sapply(users_apriori_clean$nacimiento, getEdad)\n\nusers_apriori_clean$tickets_canjeados <- sapply(users_apriori_clean$tickets_canjeados, cleanTicketsCanjeados)\n\nusers_apriori_clean$tickets_canjeados_rango <- mapply(generalRanges, users_apriori_clean$tickets_canjeados, 5, \"tickets\")\nusers_apriori_clean$tickets_canjeados_rango <- as.factor(users_apriori_clean$tickets_canjeados_rango)\n\nusers_apriori_clean$puntos_historicos_rango <- mapply(generalRanges, users_apriori_clean$puntos_historicos, 500, \"puntos\")\nusers_apriori_clean$puntos_historicos_rango <- as.factor(users_apriori_clean$puntos_historicos_rango)\n\nusers_apriori_clean$puntos_gastados_rango <- mapply(generalRanges, users_apriori_clean$puntos_gastados, 500, \"puntos\")\nusers_apriori_clean$puntos_gastados_rango <- as.factor(users_apriori_clean$puntos_gastados_rango)\n\nusers_apriori_clean$shares_totales_rango <- mapply(generalRanges, users_apriori_clean$shares_totales, 5, \"shares\")\nusers_apriori_clean$shares_totales_rango <- as.factor(users_apriori_clean$shares_totales_rango)\n\nusers_apriori_clean$concursos_participados_rango <- mapply(generalRanges, users_apriori_clean$concursos_participados, 5, \"concursos\")\nusers_apriori_clean$concursos_participados_rango <- as.factor(users_apriori_clean$concursos_participados_rango)\n\nusers_apriori_clean$shares_frequency <- mapply(setUserShareFrequency,users_apriori_clean$difference_last_and_first_share,users_apriori_clean$shares_totales)\nusers_apriori_clean$quality <- mapply(getUserQuality,users_apriori_clean$difference_last_and_first_share,users_apriori_clean$shares_frequency)\n\nkeep <- c(\"uni\", \"genero\", \"hora_afiliacion\", \"dia_afiliacion\", \"categoria_dominante\",\"edad\", \"quality\", \"tickets_canjeados_rango\", \"puntos_historicos_rango\", \"puntos_gastados_rango\", \"shares_totales_rango\", \"concursos_participados_rango\")\nusers_apriori_clean <- users_apriori_clean[keep]\n\nrules_users_apriori_clean <- apriori(users_apriori_clean, list(support=0.1))\ninspect(rules_users_apriori_clean)\n\nrules_users_eclat_clean <- eclat(users_apriori_clean, list(support=0.2))\ninspect(rules_users_eclat_clean)\n\n# VIDEOS\n\nkeep <- c(\"category\",\"points_per_view\",\"points_given\",\"release_difference\",\"duracion\", \"total_views\",\"shares_first_day\",\"shares_first_week\",\"shares_first_month\",\"total_shares\",\"total_users_at_release\",\"X1_week_active_users_at_release\",\"X1_week_new_users_at_release\",\"active_raffles_at_release\")\nvideos_apriori <- videos[keep]\n\nvideos_apriori$duracion_rangos <- mapply(generalRanges, videos_apriori$duracion, 30, \"segundos\")\nvideos_apriori$duracion_rangos <- as.factor(videos_apriori$duracion_rangos)\n\nvideos_apriori$active_raffles_at_release_rangos <- mapply(generalRanges, videos_apriori$active_raffles_at_release, 3, \"concursos\")\nvideos_apriori$active_raffles_at_release_rangos <- as.factor(videos_apriori$active_raffles_at_release_rangos)\n\nvideos_apriori$new_users_rangos <- mapply(generalRanges, videos_apriori$X1_week_new_users_at_release , 15, \"usuarios\")\nvideos_apriori$new_users_rangos <- as.factor(videos_apriori$new_users_rangos)\n\nvideos_apriori$active_users_rangos <- mapply(generalRanges, videos_apriori$X1_week_active_users_at_release , 15, \"usuarios\")\nvideos_apriori$active_users_rangos <- as.factor(videos_apriori$active_users_rangos)\n\nvideos_apriori$total_users_rangos <- mapply(generalRanges, videos_apriori$total_users_at_release , 200, \"usuarios\")\nvideos_apriori$total_users_rangos <- as.factor(videos_apriori$total_users_rangos)\n\nvideos_apriori$total_shares_rangos <- mapply(generalRanges, videos_apriori$total_shares , 10, \"shares\")\nvideos_apriori$total_shares_rangos <- as.factor(videos_apriori$total_shares_rangos)\n\nvideos_apriori$shares_first_month_rango <- mapply(generalRanges, videos_apriori$shares_first_month, 5, \"shares\")\nvideos_apriori$shares_first_month_rango <- as.factor(videos_apriori$shares_first_month_rango)\n\nvideos_apriori$shares_first_week_rango <- mapply(generalRanges, videos_apriori$shares_first_week, 5, \"shares\")\nvideos_apriori$shares_first_week_rango <- as.factor(videos_apriori$shares_first_week_rango)\n\nvideos_apriori$shares_first_day_rango <- mapply(generalRanges, videos_apriori$shares_first_day, 5, \"shares\")\nvideos_apriori$shares_first_day_rango <- as.factor(videos_apriori$shares_first_day_rango)\n\nvideos_apriori$total_views_rango <- mapply(generalRanges, videos_apriori$total_views , 50, \"vistas\")\nvideos_apriori$total_views_rango <- as.factor(videos_apriori$total_views_rango)\n\nvideos_apriori$release_difference <- sapply(videos_apriori$release_difference, function(x){if(is.na(x) || x == 0){ return(NA)} else {return(round((x/60/60/24),0))}})\nvideos_apriori$release_difference_rango <- mapply(generalRangesWithZero, videos_apriori$release_difference , 3, \"dias\")\nvideos_apriori$release_difference_rango <- as.factor(videos_apriori$release_difference_rango)\n\nvideos_apriori$avg_ppv <- mapply(function(views, points){if(points == 0 || views == 0){ return(NA) } else { return(points/views) }}, videos_apriori$total_views, videos_apriori$points_given)\nvideos_apriori$avg_ppv_rangos <- mapply(generalRanges, videos_apriori$avg_ppv , 10, \"puntos\")\nvideos_apriori$avg_ppv_rangos <- as.factor(videos_apriori$avg_ppv_rangos)\n\nkeep <- c(\"active_users_rangos\", \"total_shares_rangos\",\"total_views_rango\",\"release_difference_rango\",\"avg_ppv_rangos\")\nvideos_apriori <- videos_apriori[keep]\n\nrules_videos_apriori <- apriori(videos_apriori, list(support=0.2))\ninspect(rules_videos_apriori)\n\nrules_videos_eclat <- eclat(videos_apriori, list(support=0.4))\ninspect(rules_videos_eclat)\n\n# VIDEOS CLEAN\n\nkeep <- c(\"category\",\"points_per_view\",\"points_given\",\"release_difference\",\"duracion\", \"total_views\",\"shares_first_day\",\"shares_first_week\",\"shares_first_month\",\"total_shares\",\"total_users_at_release\",\"X1_week_active_users_at_release\",\"X1_week_new_users_at_release\",\"active_raffles_at_release\")\nvideos_apriori_clean <- videos_clean[keep]\n\nvideos_apriori_clean$duracion_rangos <- mapply(generalRanges, videos_apriori_clean$duracion, 30, \"segundos\")\nvideos_apriori_clean$duracion_rangos <- as.factor(videos_apriori_clean$duracion_rangos)\n\nvideos_apriori_clean$active_raffles_at_release_rangos <- mapply(generalRanges, videos_apriori_clean$active_raffles_at_release, 3, \"concursos\")\nvideos_apriori_clean$active_raffles_at_release_rangos <- as.factor(videos_apriori_clean$active_raffles_at_release_rangos)\n\nvideos_apriori_clean$new_users_rangos <- mapply(generalRanges, videos_apriori_clean$X1_week_new_users_at_release , 15, \"usuarios\")\nvideos_apriori_clean$new_users_rangos <- as.factor(videos_apriori_clean$new_users_rangos)\n\nvideos_apriori_clean$active_users_rangos <- mapply(generalRanges, videos_apriori_clean$X1_week_active_users_at_release , 15, \"usuarios\")\nvideos_apriori_clean$active_users_rangos <- as.factor(videos_apriori_clean$active_users_rangos)\n\nvideos_apriori_clean$total_users_rangos <- mapply(generalRanges, videos_apriori_clean$total_users_at_release , 200, \"usuarios\")\nvideos_apriori_clean$total_users_rangos <- as.factor(videos_apriori_clean$total_users_rangos)\n\nvideos_apriori_clean$total_shares_rangos <- mapply(generalRanges, videos_apriori_clean$total_shares , 10, \"shares\")\nvideos_apriori_clean$total_shares_rangos <- as.factor(videos_apriori_clean$total_shares_rangos)\n\nvideos_apriori_clean$shares_first_month_rango <- mapply(generalRanges, videos_apriori_clean$shares_first_month, 5, \"shares\")\nvideos_apriori_clean$shares_first_month_rango <- as.factor(videos_apriori_clean$shares_first_month_rango)\n\nvideos_apriori_clean$shares_first_week_rango <- mapply(generalRanges, videos_apriori_clean$shares_first_week, 5, \"shares\")\nvideos_apriori_clean$shares_first_week_rango <- as.factor(videos_apriori_clean$shares_first_week_rango)\n\nvideos_apriori_clean$shares_first_day_rango <- mapply(generalRanges, videos_apriori_clean$shares_first_day, 5, \"shares\")\nvideos_apriori_clean$shares_first_day_rango <- as.factor(videos_apriori_clean$shares_first_day_rango)\n\nvideos_apriori_clean$total_views_rango <- mapply(generalRanges, videos_apriori_clean$total_views , 50, \"vistas\")\nvideos_apriori_clean$total_views_rango <- as.factor(videos_apriori_clean$total_views_rango)\n\nvideos_apriori_clean$release_difference <- sapply(videos_apriori_clean$release_difference, function(x){if(is.na(x) || x == 0){ return(NA)} else {return(round((x/60/60/24),0))}})\nvideos_apriori_clean$release_difference_rango <- mapply(generalRangesWithZero, videos_apriori_clean$release_difference , 3, \"dias\")\nvideos_apriori_clean$release_difference_rango <- as.factor(videos_apriori_clean$release_difference_rango)\n\nvideos_apriori_clean$avg_ppv <- mapply(function(views, points){if(points == 0 || views == 0){ return(NA) } else { return(points/views) }}, videos_apriori_clean$total_views, videos_apriori_clean$points_given)\nvideos_apriori_clean$avg_ppv_rangos <- mapply(generalRanges, videos_apriori_clean$avg_ppv , 10, \"puntos\")\nvideos_apriori_clean$avg_ppv_rangos <- as.factor(videos_apriori_clean$avg_ppv_rangos)\n\nkeep <- c(\"active_users_rangos\", \"total_shares_rangos\",\"total_views_rango\",\"release_difference_rango\",\"avg_ppv_rangos\")\nvideos_apriori_clean <- videos_apriori_clean[keep]\n\nrules_videos_apriori_clean <- apriori(videos_apriori_clean, list(support=0.2))\ninspect(rules_videos_apriori_clean)\n\nrules_videos_eclat_clean <- eclat(videos_apriori_clean, list(support=0.4))\ninspect(rules_videos_eclat_clean)\n\n#\n#   K-MEANS + K-MODES\n#\n\n# USERS\n\nkeep <-c(\"puntos_historicos\", \"puntos\", \"puntos_gastados\", \"shares_totales\", \"concursos_participados\",\"tickets_canjeados\",\"difference_last_and_first_share\")\nusers_kmeans <- users[keep]\nrownames(users_kmeans) <- NULL\nusers_kmeans$tickets_canjeados <- sapply(users_kmeans$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })\nusers_kmeans <- users_kmeans[users_kmeans$difference_last_and_first_share != -1,]\n\nusers_kmeans_clean <- users_clean[keep]\nrownames(users_kmeans_clean) <- NULL\nusers_kmeans_clean$tickets_canjeados <- sapply(users_kmeans_clean$tickets_canjeados, function(x){if(is.na(x)){ return(0)} else {return(x)} })\nusers_kmeans_clean <- users_kmeans_clean[users_kmeans_clean$difference_last_and_first_share != -1,]\n\n# VIDEOS\n\nkeep <- c(\"points_per_view\",\"duracion\",\"total_views\",\"total_shares\",\"total_users_at_release\",\"X1_week_active_users_at_release\")\nvideos_kmeans <- videos[keep]\n#videos_kmeans <- videos_kmeans[videos_kmeans$release_difference != -1, ] #SACAR RELEASE DIFFERENCE -1 (NA)\nvideos_kmeans <- videos_kmeans[complete.cases(videos_kmeans), ] # SACAR ROWS CONMISSING VALUES\nnames(videos_kmeans)[names(videos_kmeans)==\"X1_week_active_users_at_release\"] <- \"active_users\"\nnames(videos_kmeans)[names(videos_kmeans)==\"total_users_at_release\"] <- \"total_users\"\n\nvideos_kmeans_clean <- videos_clean[keep]\nvideos_kmeans_clean <- videos_kmeans_clean[complete.cases(videos_kmeans_clean), ] # SACAR ROWS CONMISSING VALUES\nnames(videos_kmeans_clean)[names(videos_kmeans_clean)==\"X1_week_active_users_at_release\"] <- \"active_users\"\nnames(videos_kmeans_clean)[names(videos_kmeans_clean)==\"total_users_at_release\"] <- \"total_users\"\n\n#   SE BUSCA MAXIMIZAR DISTANCIA ENTRE CENTROS (BETWEENESS) Y MINIMIZAR DISTANCIA ENTRE CENTROS Y SUS DATOS (WITHINESS)\n#   MAX(BETWEENSS) y MIN(WITHINSS)\n\noptimos_kmeans_users <- testingOptimalK(users_kmeans,15)\noptimos_kmeans_users_clean <- testingOptimalK(users_kmeans_clean,15)\n\n# SE DESPRENDE QUE EL K OPTIMO PARA LOS DATOS ES K = 36\nusers_kmeans_result <- kmeans(users_kmeans, 36)\nusers_kmodes_result <- kmodes(users_kmeans, 36)\n\nusers_kmeans_clean_result <- kmeans(users_kmeans_clean, 36)\nusers_kmodes_clean_result <- kmodes(users_kmeans_clean, 36)\nplot(users_kmeans_clean,col=users_kmeans_clean_result$cluster)\n\noptimos_kmeans_videos <- testingOptimalK(videos_kmeans,15)\n\n# SE DESPRENDE QUE EL K OPTIMO PARA LOS DATOS ES K = 32\nvideos_kmeans_result <- kmeans(videos_kmeans, 32)\nvideos_kmodes_result <- kmodes(videos_kmeans, 32)\n\nvideos_kmeans_clean_result <- kmeans(videos_kmeans_clean, 32)\nvideos_kmodes_clean_result <- kmodes(videos_kmeans_clean, 32)\nplot(videos_kmeans_clean,col=videos_kmeans_clean_result$cluster)\n\n#\n#   DIST MATRIX\n#\n\nvideos_dist = dist(videos_kmeans)\nusers_dist = dist(users_kmeans)\n\n#\n#   AGGLOMERATIVE NESTING\n#\n\n# USERS\n\nusers_agnes_result <- agnes(users, FALSE)\nusers_discrete_agnes_result <- agnes(users_apriori, FALSE)\n\nusers_agnes_clean_result <- agnes(users_clean, FALSE)\nusers_clean_discrete_agnes_result <- agnes(users_apriori_clean, FALSE)\n\n# VIDEOS\n\nvideos_agnes_result <- agnes(videos, FALSE)\nvideos_discrete_agnes_result <- agnes(videos_apriori, FALSE)\n\nvideos_agnes_clean_result <- agnes(videos_clean, FALSE)\nvideos_clean_discrete_agnes_result <- agnes(videos_apriori_clean, FALSE)\n\n\n#\n#   Divisive Analysis\n#\n\n# USERS\n\nusers_diana_result <- diana(users, FALSE)\nusers_discrete_diana_result <- diana(users_apriori, FALSE)\n\nusers_diana_clean_result <- diana(users_clean, FALSE)\nusers_clean_discrete_diana_result <- diana(users_apriori_clean, FALSE)\n\n# VIDEOS\n\nvideos_diana_result <- diana(videos, FALSE)\nvideos_discrete_diana_result <- diana(videos_apriori, FALSE)\n\nvideos_diana_clean_result <- diana(videos_clean, FALSE)\nvideos_clean_discrete_diana_result <- diana(videos_apriori_clean, FALSE)\n\n\n#\n#   DBSCAN: ->  Este algoritmo no considera los datos apartados (lejanos) como parte de un cluster, por lo que no distoriciona el cluster mismo,\n#               en otras palabras, hay datos que quedan sin partenecer a ningÃºn cluster, investigar mÃ¡s sobre este algoritmo, sus parÃ¡metros y resultados.\n#\n\n# USERS\n\nusers_dbscan_result <- dbscan(users_kmeans, eps=10, MinPts=10)\nplot(users_dbscan_result, users_kmeans)\n\nusers_dbscan_clean_result <- dbscan(users_kmeans_clean, eps=10, MinPts=10)\nplot(users_dbscan_clean_result, users_kmeans_clean)\n\n# VIDEOS\n\nvideos_dbscan_result <- dbscan(videos_kmeans, eps=20)\nplot(videos_dbscan_result, videos_kmeans)\n\nvideos_dbscan_clean_result <- dbscan(videos_kmeans_clean, eps=20,showplot=1)\nplot(videos_dbscan_clean_result, videos_kmeans_clean)\n",
    "created" : 1438014776941.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "1|26|33|0|\n34|39|41|0|\n128|43|151|0|\n",
    "hash" : "3333507543",
    "id" : "72DA2765",
    "lastKnownWriteTime" : 1438607476,
    "path" : "~/GitHub/memoria/DescriptiveAscRules.R",
    "project_path" : "DescriptiveAscRules.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}